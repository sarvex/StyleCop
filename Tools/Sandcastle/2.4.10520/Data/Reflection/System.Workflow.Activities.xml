<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Workflow.Activities">
      <assemblydata version="3.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities.Rules</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>wf</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.Activities.Rules.Design</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® is a registered trademark of Microsoft Corporation. Windows® is a registered trademark of Microsoft Corporation.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © 2006 Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Windows Workflow Foundation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.0.4203.827</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="T:System.Workflow.Activities.ActiveDirectoryRole">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ActiveDirectoryRole" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ActiveDirectoryRole" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ActiveDirectoryRole">
      <topicdata name="ActiveDirectoryRole" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRole" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ActiveDirectoryRole" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.ActiveDirectoryRole">
      <topicdata name="ActiveDirectoryRole" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRole" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_ActiveDirectoryRole" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ActiveDirectoryRole">
      <topicdata name="ActiveDirectoryRole" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRole" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
        <element api="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ActiveDirectoryRole" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports">
      <topicdata group="api" />
      <apidata name="GetAllReports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetAllReports" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports">
      <topicdata group="api" />
      <apidata name="GetDirectReports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetDirectReports" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries">
      <topicdata group="api" />
      <apidata name="GetEntries" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetEntries" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities">
      <topicdata group="api" />
      <apidata name="GetIdentities" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetIdentities" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager">
      <topicdata group="api" />
      <apidata name="GetManager" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetManager" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain">
      <topicdata group="api" />
      <apidata name="GetManagerialChain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetManagerialChain" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers">
      <topicdata group="api" />
      <apidata name="GetPeers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetPeers" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers">
      <topicdata group="api" />
      <apidata name="GetSecurityIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_GetSecurityIdentifiers" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_IncludesIdentity_1_72eac341" />
    </api>
    <api id="P:System.Workflow.Activities.ActiveDirectoryRole.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.WorkflowRole.Name">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ActiveDirectoryRole_Name" />
    </api>
    <api id="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry">
      <topicdata group="api" />
      <apidata name="RootEntry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ActiveDirectoryRole_RootEntry" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_System_IDisposable_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRole_System_Runtime_Serialization_ISerializable_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      <apidata name="ActiveDirectoryRoleFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ActiveDirectoryRoleFactory" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <topicdata name="ActiveDirectoryRoleFactory" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      <apidata name="ActiveDirectoryRoleFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ActiveDirectoryRoleFactory" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <topicdata name="ActiveDirectoryRoleFactory" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      <apidata name="ActiveDirectoryRoleFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)" />
        <element api="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_ActiveDirectoryRoleFactory" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <topicdata name="ActiveDirectoryRoleFactory" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
      <apidata name="ActiveDirectoryRoleFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ActiveDirectoryRoleFactory" />
    </api>
    <api id="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ActiveDirectoryRoleFactory_Configuration" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFromAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="alias">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRoleFactory_CreateFromAlias_1_72eac341" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFromEmailAddress" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="emailAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRoleFactory_CreateFromEmailAddress_1_72eac341" />
    </api>
    <api id="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)">
      <topicdata group="api" />
      <apidata name="CreateFromSecurityIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sid">
          <type api="T:System.Security.Principal.SecurityIdentifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ActiveDirectoryRoleFactory_CreateFromSecurityIdentifier_1_04b7a6ef" />
    </api>
    <api id="T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_CallExternalMethodActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
          <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
          <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
        <element api="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CallExternalMethodActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.CallExternalMethodActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_CallExternalMethodActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
        <element api="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_CallExternalMethodActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_CallExternalMethodActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.CallExternalMethodActivity">
      <topicdata name="CallExternalMethodActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name="CallExternalMethodActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_CallExternalMethodActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CallExternalMethodActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.CallExternalMethodActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CallExternalMethodActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.CallExternalMethodActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CallExternalMethodActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.CallExternalMethodActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CallExternalMethodActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.CallExternalMethodActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CallExternalMethodActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.CallExternalMethodActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CallExternalMethodActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CallExternalMethodActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CallExternalMethodActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken">
      <topicdata group="api" />
      <apidata name="CorrelationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Runtime.CorrelationToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_CallExternalMethodActivity_CorrelationToken" />
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty">
      <topicdata group="api" />
      <apidata name="CorrelationTokenProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_CallExternalMethodActivity_CorrelationTokenProperty" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CallExternalMethodActivity_Execute_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties">
      <topicdata group="api" />
      <apidata name="InitializeProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CallExternalMethodActivity_InitializeProperties" />
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_CallExternalMethodActivity_InterfaceType" />
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty">
      <topicdata group="api" />
      <apidata name="InterfaceTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_CallExternalMethodActivity_InterfaceTypeProperty" />
    </api>
    <api id="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking">
      <topicdata group="api" />
      <apidata name="MethodInvoking" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_CallExternalMethodActivity_MethodInvoking" />
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent">
      <topicdata group="api" />
      <apidata name="MethodInvokingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_CallExternalMethodActivity_MethodInvokingEvent" />
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_CallExternalMethodActivity_MethodName" />
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty">
      <topicdata group="api" />
      <apidata name="MethodNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_CallExternalMethodActivity_MethodNameProperty" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnMethodInvoked" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CallExternalMethodActivity_OnMethodInvoked_1_533fc935" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnMethodInvoking" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CallExternalMethodActivity_OnMethodInvoking_1_533fc935" />
    </api>
    <api id="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_CallExternalMethodActivity_ParameterBindings" />
    </api>
    <api id="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_CallExternalMethodActivity_ParameterBindingsProperty" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CallExternalMethodActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetAccessType_2_a0c4af46" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CallExternalMethodActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetPropertyType_2_a0c4af46" />
    </api>
    <api id="T:System.Workflow.Activities.CallExternalMethodActivityValidator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivityValidator" />
      <apidata name="CallExternalMethodActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_CallExternalMethodActivityValidator" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CallExternalMethodActivityValidator">
      <topicdata name="CallExternalMethodActivityValidator" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivityValidator" />
      <apidata name="CallExternalMethodActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CallExternalMethodActivityValidator" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.CallExternalMethodActivityValidator">
      <topicdata name="CallExternalMethodActivityValidator" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CallExternalMethodActivityValidator" />
      <apidata name="CallExternalMethodActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_CallExternalMethodActivityValidator" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CallExternalMethodActivityValidator_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="manager">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationManager" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivityValidator" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CallExternalMethodActivityValidator_Validate_2_93a6680c" />
    </api>
    <api id="T:System.Workflow.Activities.CodeActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.code.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_CodeActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.#ctor">
          <element api="M:System.Workflow.Activities.CodeActivity.#ctor" />
          <element api="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)" />
        </element>
        <element api="E:System.Workflow.Activities.CodeActivity.ExecuteCode" />
        <element api="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.CodeActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CodeActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.CodeActivity.ExecuteCode" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_CodeActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_CodeActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.CodeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.CodeActivity.#ctor" />
        <element api="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CodeActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.CodeActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CodeActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.CodeActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CodeActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.CodeActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CodeActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.CodeActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CodeActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.CodeActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CodeActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.CodeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CodeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CodeActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CodeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CodeActivity_ctor_1_61b4e77c" />
    </api>
    <api id="E:System.Workflow.Activities.CodeActivity.ExecuteCode">
      <topicdata group="api" />
      <apidata name="ExecuteCode" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_CodeActivity_ExecuteCode" />
    </api>
    <api id="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent">
      <topicdata group="api" />
      <apidata name="ExecuteCodeEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_CodeActivity_ExecuteCodeEvent" />
    </api>
    <api id="T:System.Workflow.Activities.CodeCondition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_CodeCondition" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CodeCondition.#ctor" />
        <element api="E:System.Workflow.Activities.CodeCondition.Condition" />
        <element api="F:System.Workflow.Activities.CodeCondition.ConditionEvent" />
        <element api="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.CodeCondition.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CodeCondition" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.CodeCondition.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_CodeCondition" />
    </api>
    <api id="Events.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.CodeCondition.Condition" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_CodeCondition" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.CodeCondition">
      <topicdata name="CodeCondition" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.CodeCondition" />
      <apidata name="CodeCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.CodeCondition.ConditionEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_CodeCondition" />
    </api>
    <api id="Overload:System.Workflow.Activities.CodeCondition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CodeCondition" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CodeCondition_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.CodeCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CodeCondition_ctor" />
    </api>
    <api id="E:System.Workflow.Activities.CodeCondition.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_CodeCondition_Condition" />
    </api>
    <api id="F:System.Workflow.Activities.CodeCondition.ConditionEvent">
      <topicdata group="api" />
      <apidata name="ConditionEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_CodeCondition_ConditionEvent" />
    </api>
    <api id="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ownerActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CodeCondition_Evaluate_2_065a00af" />
    </api>
    <api id="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
      <topicdata group="api" />
      <apidata name="GetBoundValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="bind">
          <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CodeCondition_GetBoundValue_2_3189d062" />
    </api>
    <api id="T:System.Workflow.Activities.CompensatableSequenceActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity" />
      <apidata name="CompensatableSequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_CompensatableSequenceActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity">
      <topicdata name="CompensatableSequenceActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      <apidata name="CompensatableSequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
          <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
          <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CompensatableSequenceActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.CompensatableSequenceActivity">
      <topicdata name="CompensatableSequenceActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      <apidata name="CompensatableSequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_CompensatableSequenceActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
        <element api="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CompensatableSequenceActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.CompensatableSequenceActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CompensatableSequenceActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CompensatableSequenceActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CompensatableSequenceActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.CompensatableSequenceActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CompensatableSequenceActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.CompensatableSequenceActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CompensatableSequenceActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_CompensatableSequenceActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CompensatableSequenceActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.CompensatableSequenceActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CompensatableSequenceActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Compensate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_CompensatableSequenceActivity_System_Workflow_ComponentModel_ICompensatableActivity_Compensate_1_95a0979d" />
    </api>
    <api id="T:System.Workflow.Activities.ConditionalEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionalEventArgs" />
      <apidata name="ConditionalEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ConditionalEventArgs" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ConditionalEventArgs">
      <topicdata name="ConditionalEventArgs" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ConditionalEventArgs" />
      <apidata name="ConditionalEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor">
          <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
          <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.Activities.ConditionalEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ConditionalEventArgs" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ConditionalEventArgs">
      <topicdata name="ConditionalEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ConditionalEventArgs" />
      <apidata name="ConditionalEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ConditionalEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ConditionalEventArgs" />
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionalEventArgs" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
        <element api="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ConditionalEventArgs_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionalEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ConditionalEventArgs_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionalEventArgs.#ctor" />
      <parameters>
        <parameter name="result">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ConditionalEventArgs_ctor_1_abc7a1d5" />
    </api>
    <api id="P:System.Workflow.Activities.ConditionalEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionalEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ConditionalEventArgs_Result" />
    </api>
    <api id="T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.cag.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption" ref="false" />
            <enumValue>
              <field name="Concurrent" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_ConditionedActivityGroup" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
          <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
          <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" />
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty" />
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ConditionedActivityGroup" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.ConditionedActivityGroup.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_ConditionedActivityGroup" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ConditionedActivityGroup" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.ConditionedActivityGroup">
      <topicdata name="ConditionedActivityGroup" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name="ConditionedActivityGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty" />
        <element api="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_ConditionedActivityGroup" />
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
        <element api="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ConditionedActivityGroup_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionedActivityGroup.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ConditionedActivityGroup_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionedActivityGroup.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ConditionedActivityGroup_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionedActivityGroup.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ConditionedActivityGroup_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionedActivityGroup.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ConditionedActivityGroup_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.ConditionedActivityGroup.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ConditionedActivityGroup" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ConditionedActivityGroup_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ConditionedActivityGroup_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ConditionedActivityGroup.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ConditionedActivityGroup_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="GetChildActivityExecutedCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="child">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ConditionedActivityGroup_GetChildActivityExecutedCount_1_61ac0a98" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)">
      <topicdata group="api" />
      <apidata name="GetDynamicActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ConditionedActivityGroup_GetDynamicActivity_1_72eac341" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)">
      <topicdata group="api" />
      <apidata name="GetWhenCondition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ConditionedActivityGroup_GetWhenCondition_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetWhenCondition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ConditionedActivityGroup_SetWhenCondition_2_3fcf08df" />
    </api>
    <api id="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ConditionedActivityGroup_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition">
      <topicdata group="api" />
      <apidata name="UntilCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ConditionedActivityGroup_UntilCondition" />
    </api>
    <api id="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty">
      <topicdata group="api" />
      <apidata name="UntilConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ConditionedActivityGroup_UntilConditionProperty" />
    </api>
    <api id="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty">
      <topicdata group="api" />
      <apidata name="WhenConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ConditionedActivityGroup_WhenConditionProperty" />
    </api>
    <api id="T:System.Workflow.Activities.CorrelationAliasAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CorrelationAliasAttribute" />
      <apidata name="CorrelationAliasAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Event" />
              <field name="Delegate" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_CorrelationAliasAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CorrelationAliasAttribute">
      <topicdata name="CorrelationAliasAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CorrelationAliasAttribute" />
      <apidata name="CorrelationAliasAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CorrelationAliasAttribute.#ctor(System.String,System.String)" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Name" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Path" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CorrelationAliasAttribute" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.CorrelationAliasAttribute">
      <topicdata name="CorrelationAliasAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CorrelationAliasAttribute" />
      <apidata name="CorrelationAliasAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Name" />
        <element api="P:System.Workflow.Activities.CorrelationAliasAttribute.Path" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_CorrelationAliasAttribute" />
    </api>
    <api id="M:System.Workflow.Activities.CorrelationAliasAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CorrelationAliasAttribute_ctor_2_6608d038" />
    </api>
    <api id="P:System.Workflow.Activities.CorrelationAliasAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_CorrelationAliasAttribute_Name" />
    </api>
    <api id="P:System.Workflow.Activities.CorrelationAliasAttribute.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationAliasAttribute" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_CorrelationAliasAttribute_Path" />
    </api>
    <api id="T:System.Workflow.Activities.CorrelationInitializerAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CorrelationInitializerAttribute" />
      <apidata name="CorrelationInitializerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_CorrelationInitializerAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CorrelationInitializerAttribute">
      <topicdata name="CorrelationInitializerAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CorrelationInitializerAttribute" />
      <apidata name="CorrelationInitializerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CorrelationInitializerAttribute" />
    </api>
    <api id="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationInitializerAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CorrelationInitializerAttribute_ctor" />
    </api>
    <api id="T:System.Workflow.Activities.CorrelationParameterAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.CorrelationParameterAttribute" />
      <apidata name="CorrelationParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_CorrelationParameterAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.CorrelationParameterAttribute">
      <topicdata name="CorrelationParameterAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.CorrelationParameterAttribute" />
      <apidata name="CorrelationParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.CorrelationParameterAttribute.#ctor(System.String)" />
        <element api="P:System.Workflow.Activities.CorrelationParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_CorrelationParameterAttribute" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.CorrelationParameterAttribute">
      <topicdata name="CorrelationParameterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.CorrelationParameterAttribute" />
      <apidata name="CorrelationParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.CorrelationParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_CorrelationParameterAttribute" />
    </api>
    <api id="M:System.Workflow.Activities.CorrelationParameterAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationParameterAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_CorrelationParameterAttribute_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.CorrelationParameterAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.CorrelationParameterAttribute" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_CorrelationParameterAttribute_Name" />
    </api>
    <api id="T:System.Workflow.Activities.DelayActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Delay.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_DelayActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.#ctor">
          <element api="M:System.Workflow.Activities.DelayActivity.#ctor" />
          <element api="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)" />
        </element>
        <element api="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />
        <element api="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent" />
        <element api="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />
        <element api="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_DelayActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.DelayActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_DelayActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_DelayActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_DelayActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.DelayActivity">
      <topicdata name="DelayActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.DelayActivity" />
      <apidata name="DelayActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent" />
        <element api="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_DelayActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.DelayActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.DelayActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.DelayActivity.#ctor" />
        <element api="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_DelayActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.DelayActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.DelayActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_DelayActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.DelayActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.DelayActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_DelayActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.DelayActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.DelayActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_DelayActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.DelayActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.DelayActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_DelayActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.DelayActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.DelayActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_DelayActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.DelayActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_DelayActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.DelayActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_DelayActivity_ctor_1_61b4e77c" />
    </api>
    <api id="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration">
      <topicdata group="api" />
      <apidata name="InitializeTimeoutDuration" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_DelayActivity_InitializeTimeoutDuration" />
    </api>
    <api id="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent">
      <topicdata group="api" />
      <apidata name="InitializeTimeoutDurationEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_DelayActivity_InitializeTimeoutDurationEvent" />
    </api>
    <api id="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.Activities.IEventActivity.QueueName">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_DelayActivity_System_Workflow_Activities_IEventActivity_QueueName" />
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_DelayActivity_System_Workflow_Activities_IEventActivity_Subscribe_2_9534996f" />
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_DelayActivity_System_Workflow_Activities_IEventActivity_Unsubscribe_2_9534996f" />
    </api>
    <api id="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_DelayActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_QueueEventArgs}_OnEvent_2_5fe65c61" />
    </api>
    <api id="P:System.Workflow.Activities.DelayActivity.TimeoutDuration">
      <topicdata group="api" />
      <apidata name="TimeoutDuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_DelayActivity_TimeoutDuration" />
    </api>
    <api id="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty">
      <topicdata group="api" />
      <apidata name="TimeoutDurationProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_DelayActivity_TimeoutDurationProperty" />
    </api>
    <api id="T:System.Workflow.Activities.EventDeliveryFailedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDeliveryFailedException" />
      <apidata name="EventDeliveryFailedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_EventDeliveryFailedException" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.EventDeliveryFailedException">
      <topicdata name="EventDeliveryFailedException" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.EventDeliveryFailedException" />
      <apidata name="EventDeliveryFailedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
          <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
          <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_EventDeliveryFailedException" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDeliveryFailedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
        <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventDeliveryFailedException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventDeliveryFailedException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventDeliveryFailedException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDeliveryFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDeliveryFailedException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventDeliveryFailedException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Workflow.Activities.EventDrivenActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDrivenActivity" />
      <apidata name="EventDrivenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.EventDriven.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_EventDrivenActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.EventDrivenActivity">
      <topicdata name="EventDrivenActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.EventDrivenActivity" />
      <apidata name="EventDrivenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor">
          <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
          <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.EventDrivenActivity.EventActivity" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.EventDrivenActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_EventDrivenActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.EventDrivenActivity">
      <topicdata name="EventDrivenActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.EventDrivenActivity" />
      <apidata name="EventDrivenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.EventDrivenActivity.EventActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_EventDrivenActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDrivenActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
        <element api="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventDrivenActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventDrivenActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDrivenActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventDrivenActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventDrivenActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDrivenActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventDrivenActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventDrivenActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDrivenActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventDrivenActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventDrivenActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDrivenActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventDrivenActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventDrivenActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventDrivenActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventDrivenActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.EventDrivenActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventDrivenActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventDrivenActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.EventDrivenActivity.EventActivity">
      <topicdata group="api" />
      <apidata name="EventActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_EventDrivenActivity_EventActivity" />
    </api>
    <api id="T:System.Workflow.Activities.EventHandlersActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlersActivity" />
      <apidata name="EventHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.events.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_EventHandlersActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.EventHandlersActivity">
      <topicdata name="EventHandlersActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.EventHandlersActivity" />
      <apidata name="EventHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor">
          <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
          <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_EventHandlersActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventHandlersActivity">
      <topicdata name="EventHandlersActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventHandlersActivity" />
      <apidata name="EventHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.EventHandlersActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_EventHandlersActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlersActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor" />
        <element api="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlersActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlersActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlersActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlersActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlersActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlersActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlersActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlersActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlersActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlersActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlersActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlersActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlersActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlersActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlersActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlersActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventHandlersActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlersActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventHandlersActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)">
      <topicdata group="api" />
      <apidata name="GetDynamicActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventHandlersActivity_GetDynamicActivity_1_72eac341" />
    </api>
    <api id="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventHandlersActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="T:System.Workflow.Activities.EventHandlingScopeActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity" />
      <apidata name="EventHandlingScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_EventHandlingScopeActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity">
      <topicdata name="EventHandlingScopeActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      <apidata name="EventHandlingScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
          <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
          <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_EventHandlingScopeActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventHandlingScopeActivity">
      <topicdata name="EventHandlingScopeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      <apidata name="EventHandlingScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_EventHandlingScopeActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
        <element api="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlingScopeActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlingScopeActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlingScopeActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlingScopeActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlingScopeActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlingScopeActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlingScopeActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventHandlingScopeActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventHandlingScopeActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventHandlingScopeActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventHandlingScopeActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventHandlingScopeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventHandlingScopeActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventHandlingScopeActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="T:System.Workflow.Activities.EventQueueName">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventQueueName" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_EventQueueName" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.EventQueueName">
      <topicdata name="EventQueueName" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.EventQueueName" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.EventQueueName.#ctor">
          <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)" />
          <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})" />
        </element>
        <element api="Overload:System.Workflow.Activities.EventQueueName.CompareTo">
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)" />
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)" />
        </element>
        <element api="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetHashCode" />
        <element api="P:System.Workflow.Activities.EventQueueName.InterfaceType" />
        <element api="P:System.Workflow.Activities.EventQueueName.MethodName" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_EventQueueName" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.EventQueueName">
      <topicdata name="EventQueueName" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.EventQueueName" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.EventQueueName.CompareTo">
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)" />
          <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)" />
        </element>
        <element api="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues" />
        <element api="M:System.Workflow.Activities.EventQueueName.GetHashCode" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_EventQueueName" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.EventQueueName">
      <topicdata name="EventQueueName" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.EventQueueName" />
      <apidata name="EventQueueName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.EventQueueName.InterfaceType" />
        <element api="P:System.Workflow.Activities.EventQueueName.MethodName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_EventQueueName" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventQueueName.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventQueueName" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)" />
        <element api="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventQueueName_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.EventQueueName.CompareTo">
      <topicdata name="CompareTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.EventQueueName" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)" />
        <element api="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_EventQueueName_CompareTo" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventQueueName.#ctor" />
      <parameters>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventQueueName_ctor_2_c528e0c6" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.EventQueueName.#ctor" />
      <parameters>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValues">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Runtime.CorrelationProperty" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_EventQueueName_ctor_3_1de2e6f9" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.EventQueueName.CompareTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="toCompare">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_CompareTo_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.EventQueueName.CompareTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventQueueName">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_CompareTo_1_133a5673" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_Equals_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues">
      <topicdata group="api" />
      <apidata name="GetCorrelationValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Workflow.Runtime.CorrelationProperty" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_GetCorrelationValues" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_GetHashCode" />
    </api>
    <api id="P:System.Workflow.Activities.EventQueueName.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_EventQueueName_InterfaceType" />
    </api>
    <api id="P:System.Workflow.Activities.EventQueueName.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_EventQueueName_MethodName" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_op_Equality_2_2c262ed9" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_op_GreaterThan_2_2c262ed9" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_op_Inequality_2_2c262ed9" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueKey1">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
        <parameter name="queueKey2">
          <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_op_LessThan_2_2c262ed9" />
    </api>
    <api id="M:System.Workflow.Activities.EventQueueName.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.EventQueueName" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_EventQueueName_ToString" />
    </api>
    <api id="T:System.Workflow.Activities.ExecutionType">
      <topicdata group="api" />
      <apidata name="ExecutionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.ExecutionType.Sequence" />
        <element api="F:System.Workflow.Activities.ExecutionType.Parallel" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ExecutionType" />
    </api>
    <api id="F:System.Workflow.Activities.ExecutionType.Parallel">
      <topicdata group="api" notopic="" />
      <apidata name="Parallel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_ExecutionType_Parallel" />
    </api>
    <api id="F:System.Workflow.Activities.ExecutionType.Sequence">
      <topicdata group="api" notopic="" />
      <apidata name="Sequence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_ExecutionType_Sequence" />
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ExternalDataEventArgs" />
      <apidata name="ExternalDataEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ExternalDataEventArgs" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ExternalDataEventArgs">
      <topicdata name="ExternalDataEventArgs" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ExternalDataEventArgs" />
      <apidata name="ExternalDataEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor">
          <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)" />
          <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)" />
          <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)" />
        </element>
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.Identity" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ExternalDataEventArgs" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ExternalDataEventArgs">
      <topicdata name="ExternalDataEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ExternalDataEventArgs" />
      <apidata name="ExternalDataEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.Identity" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
        <element api="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ExternalDataEventArgs" />
    </api>
    <api id="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ExternalDataEventArgs" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)" />
        <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ExternalDataEventArgs_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataEventArgs_ctor_1_34b98ada" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="workHandler">
          <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
        </parameter>
        <parameter name="workItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataEventArgs_ctor_3_96c93c76" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="workHandler">
          <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
        </parameter>
        <parameter name="workItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="waitForIdle">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataEventArgs_ctor_4_927d9111" />
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.Identity">
      <topicdata group="api" />
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ExternalDataEventArgs_Identity" />
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ExternalDataEventArgs_InstanceId" />
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle">
      <topicdata group="api" />
      <apidata name="WaitForIdle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ExternalDataEventArgs_WaitForIdle" />
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler">
      <topicdata group="api" />
      <apidata name="WorkHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ExternalDataEventArgs_WorkHandler" />
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem">
      <topicdata group="api" />
      <apidata name="WorkItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ExternalDataEventArgs_WorkItem" />
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataExchangeAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeAttribute" />
      <apidata name="ExternalDataExchangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_ExternalDataExchangeAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeAttribute">
      <topicdata name="ExternalDataExchangeAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />
      <apidata name="ExternalDataExchangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ExternalDataExchangeAttribute" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataExchangeAttribute_ctor" />
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataExchangeService">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeService" />
      <apidata name="ExternalDataExchangeService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ExternalDataExchangeService" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeService">
      <topicdata name="ExternalDataExchangeService" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeService" />
      <apidata name="ExternalDataExchangeService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)" />
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)" />
          <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.Start" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
        <element api="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
        <element api="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ExternalDataExchangeService" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.ExternalDataExchangeService">
      <topicdata name="ExternalDataExchangeService" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeService" />
      <apidata name="ExternalDataExchangeService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.Start" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
        <element api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_ExternalDataExchangeService" />
    </api>
    <api id="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeService" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ExternalDataExchangeService_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataExchangeService_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <parameters>
        <parameter name="parameters">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataExchangeService_ctor_1_c2f6931c" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <parameters>
        <parameter name="configSectionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataExchangeService_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ExternalDataExchangeService.#ctor" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataExchangeService_ctor_1_5887ec63" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="service">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ExternalDataExchangeService_AddService_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ExternalDataExchangeService_GetService_1_61b1ab37" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="service">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ExternalDataExchangeService_RemoveService_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeService.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <type api="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeService" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ExternalDataExchangeService_Start" />
    </api>
    <api id="T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      <apidata name="ExternalDataExchangeServiceSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ExternalDataExchangeServiceSection" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <topicdata name="ExternalDataExchangeServiceSection" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      <apidata name="ExternalDataExchangeServiceSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.Workflow.Activities.ExternalDataExchangeServiceSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor" />
        <element api="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ExternalDataExchangeServiceSection" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <topicdata name="ExternalDataExchangeServiceSection" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      <apidata name="ExternalDataExchangeServiceSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="Overload:System.Workflow.Activities.ExternalDataExchangeServiceSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ExternalDataExchangeServiceSection" />
    </api>
    <api id="Overload:System.Workflow.Activities.ExternalDataExchangeServiceSection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ExternalDataExchangeServiceSection" allInherited="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ExternalDataExchangeServiceSection_Item" />
    </api>
    <api id="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ExternalDataExchangeServiceSection_ctor" />
    </api>
    <api id="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services">
      <topicdata group="api" />
      <apidata name="Services" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeServiceElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Services</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_ExternalDataExchangeServiceSection_Services" />
    </api>
    <api id="T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_HandleExternalEventActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
          <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
          <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
        <element api="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_HandleExternalEventActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.HandleExternalEventActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_HandleExternalEventActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
        <element api="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_HandleExternalEventActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_HandleExternalEventActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.HandleExternalEventActivity">
      <topicdata name="HandleExternalEventActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name="HandleExternalEventActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_HandleExternalEventActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_HandleExternalEventActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.HandleExternalEventActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_HandleExternalEventActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.HandleExternalEventActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_HandleExternalEventActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.HandleExternalEventActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_HandleExternalEventActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.HandleExternalEventActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_HandleExternalEventActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.HandleExternalEventActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_HandleExternalEventActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_HandleExternalEventActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_HandleExternalEventActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_Cancel_1_95a0979d" />
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken">
      <topicdata group="api" />
      <apidata name="CorrelationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Runtime.CorrelationToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_HandleExternalEventActivity_CorrelationToken" />
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty">
      <topicdata group="api" />
      <apidata name="CorrelationTokenProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_HandleExternalEventActivity_CorrelationTokenProperty" />
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.EventName">
      <topicdata group="api" />
      <apidata name="EventName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_HandleExternalEventActivity_EventName" />
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty">
      <topicdata group="api" />
      <apidata name="EventNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_HandleExternalEventActivity_EventNameProperty" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_Execute_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleFault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_HandleFault_2_26b8069e" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_Initialize_1_e75224d5" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties">
      <topicdata group="api" />
      <apidata name="InitializeProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_InitializeProperties" />
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_HandleExternalEventActivity_InterfaceType" />
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty">
      <topicdata group="api" />
      <apidata name="InterfaceTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_HandleExternalEventActivity_InterfaceTypeProperty" />
    </api>
    <api id="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked">
      <topicdata group="api" />
      <apidata name="Invoked" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ExternalDataEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_HandleExternalEventActivity_Invoked" />
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent">
      <topicdata group="api" />
      <apidata name="InvokedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_HandleExternalEventActivity_InvokedEvent" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_OnClosed_1_e75224d5" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnInvoked" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_OnInvoked_1_533fc935" />
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_HandleExternalEventActivity_ParameterBindings" />
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_HandleExternalEventActivity_ParameterBindingsProperty" />
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_HandleExternalEventActivity_Roles" />
    </api>
    <api id="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty">
      <topicdata group="api" />
      <apidata name="RolesProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_HandleExternalEventActivity_RolesProperty" />
    </api>
    <api id="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.Activities.IEventActivity.QueueName">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_HandleExternalEventActivity_System_Workflow_Activities_IEventActivity_QueueName" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_System_Workflow_Activities_IEventActivity_Subscribe_2_9534996f" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_System_Workflow_Activities_IEventActivity_Unsubscribe_2_9534996f" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_QueueEventArgs}_OnEvent_2_5fe65c61" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetAccessType_2_a0c4af46" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetPropertyType_2_a0c4af46" />
    </api>
    <api id="T:System.Workflow.Activities.HandleExternalEventActivityValidator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivityValidator" />
      <apidata name="HandleExternalEventActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_HandleExternalEventActivityValidator" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.HandleExternalEventActivityValidator">
      <topicdata name="HandleExternalEventActivityValidator" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivityValidator" />
      <apidata name="HandleExternalEventActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_HandleExternalEventActivityValidator" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.HandleExternalEventActivityValidator">
      <topicdata name="HandleExternalEventActivityValidator" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.HandleExternalEventActivityValidator" />
      <apidata name="HandleExternalEventActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_HandleExternalEventActivityValidator" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_HandleExternalEventActivityValidator_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="manager">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationManager" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivityValidator" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_HandleExternalEventActivityValidator_Validate_2_93a6680c" />
    </api>
    <api id="T:System.Workflow.Activities.IEventActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IEventActivity" />
      <apidata name="IEventActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_IEventActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.IEventActivity">
      <topicdata name="IEventActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.IEventActivity" />
      <apidata name="IEventActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.IEventActivity.QueueName" />
        <element api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_IEventActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.IEventActivity">
      <topicdata name="IEventActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.IEventActivity" />
      <apidata name="IEventActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_IEventActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.IEventActivity">
      <topicdata name="IEventActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.IEventActivity" />
      <apidata name="IEventActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.IEventActivity.QueueName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_IEventActivity" />
    </api>
    <api id="P:System.Workflow.Activities.IEventActivity.QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_IEventActivity_QueueName" />
    </api>
    <api id="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_IEventActivity_Subscribe_2_9534996f" />
    </api>
    <api id="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_IEventActivity_Unsubscribe_2_9534996f" />
    </api>
    <api id="T:System.Workflow.Activities.IfElseActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" />
      <apidata name="IfElseActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Decision.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_IfElseActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.IfElseActivity">
      <topicdata name="IfElseActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.IfElseActivity" />
      <apidata name="IfElseActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.#ctor">
          <element api="M:System.Workflow.Activities.IfElseActivity.#ctor" />
          <element api="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)" />
        </element>
        <element api="Overload:System.Workflow.Activities.IfElseActivity.AddBranch">
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})" />
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)" />
        </element>
        <element api="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_IfElseActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.IfElseActivity">
      <topicdata name="IfElseActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.IfElseActivity" />
      <apidata name="IfElseActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.AddBranch">
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})" />
          <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)" />
        </element>
        <element api="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.IfElseActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_IfElseActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.IfElseActivity.#ctor" />
        <element api="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.AddBranch">
      <topicdata name="AddBranch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" />
      <apidata name="AddBranch" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})" />
        <element api="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseActivity_AddBranch" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_IfElseActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_IfElseActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})">
      <topicdata group="api" />
      <apidata name="AddBranch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.IfElseActivity.AddBranch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activities">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_IfElseActivity_AddBranch_1_160f28d1" />
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)">
      <topicdata group="api" />
      <apidata name="AddBranch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.IfElseActivity.AddBranch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activities">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="branchCondition">
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_IfElseActivity_AddBranch_2_3e7382f4" />
    </api>
    <api id="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_IfElseActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.DecisionBranch.bmp</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_IfElseBranchActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata name="IfElseBranchActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor">
          <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
          <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.IfElseBranchActivity.Condition" />
        <element api="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.IfElseBranchActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_IfElseBranchActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata name="IfElseBranchActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.IfElseBranchActivity.Condition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_IfElseBranchActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.IfElseBranchActivity">
      <topicdata name="IfElseBranchActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name="IfElseBranchActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_IfElseBranchActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
        <element api="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseBranchActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseBranchActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseBranchActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseBranchActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseBranchActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseBranchActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseBranchActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseBranchActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseBranchActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.IfElseBranchActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.IfElseBranchActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_IfElseBranchActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.IfElseBranchActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_IfElseBranchActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.IfElseBranchActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_IfElseBranchActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.IfElseBranchActivity.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_IfElseBranchActivity_Condition" />
    </api>
    <api id="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty">
      <topicdata group="api" />
      <apidata name="ConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_IfElseBranchActivity_ConditionProperty" />
    </api>
    <api id="T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceInOut.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_InvokeWebServiceActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
          <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
          <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)" />
        </element>
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent" />
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_InvokeWebServiceActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_InvokeWebServiceActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_InvokeWebServiceActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked" />
        <element api="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_InvokeWebServiceActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.InvokeWebServiceActivity">
      <topicdata name="InvokeWebServiceActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name="InvokeWebServiceActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty" />
        <element api="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_InvokeWebServiceActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWebServiceActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWebServiceActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWebServiceActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWebServiceActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWebServiceActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWebServiceActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWebServiceActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWebServiceActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWebServiceActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_InvokeWebServiceActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWebServiceActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_InvokeWebServiceActivity_ctor_1_61b4e77c" />
    </api>
    <api id="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked">
      <topicdata group="api" />
      <apidata name="Invoked" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_InvokeWebServiceActivity_Invoked" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent">
      <topicdata group="api" />
      <apidata name="InvokedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWebServiceActivity_InvokedEvent" />
    </api>
    <api id="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking">
      <topicdata group="api" />
      <apidata name="Invoking" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_InvokeWebServiceActivity_Invoking" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent">
      <topicdata group="api" />
      <apidata name="InvokingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWebServiceActivity_InvokingEvent" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWebServiceActivity_MethodName" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty">
      <topicdata group="api" />
      <apidata name="MethodNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWebServiceActivity_MethodNameProperty" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWebServiceActivity_ParameterBindings" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWebServiceActivity_ParameterBindingsProperty" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass">
      <topicdata group="api" />
      <apidata name="ProxyClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWebServiceActivity_ProxyClass" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty">
      <topicdata group="api" />
      <apidata name="ProxyClassProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWebServiceActivity_ProxyClassProperty" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId">
      <topicdata group="api" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWebServiceActivity_SessionId" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty">
      <topicdata group="api" />
      <apidata name="SessionIdProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWebServiceActivity_SessionIdProperty" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_InvokeWebServiceActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetAccessType_2_a0c4af46" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_InvokeWebServiceActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetPropertyType_2_a0c4af46" />
    </api>
    <api id="T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
      <apidata name="InvokeWebServiceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_InvokeWebServiceEventArgs" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <topicdata name="InvokeWebServiceEventArgs" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
      <apidata name="InvokeWebServiceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.InvokeWebServiceEventArgs.#ctor(System.Object)" />
        <element api="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_InvokeWebServiceEventArgs" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <topicdata name="InvokeWebServiceEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.InvokeWebServiceEventArgs" />
      <apidata name="InvokeWebServiceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_InvokeWebServiceEventArgs" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWebServiceEventArgs.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="proxyInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_InvokeWebServiceEventArgs_ctor_1_286e8133" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy">
      <topicdata group="api" />
      <apidata name="WebServiceProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWebServiceEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWebServiceEventArgs_WebServiceProxy" />
    </api>
    <api id="T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Service.bmp</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_InvokeWorkflowActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
          <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
          <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty" />
        <element api="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty" />
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_InvokeWorkflowActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_InvokeWorkflowActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
        <element api="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_InvokeWorkflowActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_InvokeWorkflowActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.InvokeWorkflowActivity">
      <topicdata name="InvokeWorkflowActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name="InvokeWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_InvokeWorkflowActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
        <element api="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWorkflowActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWorkflowActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWorkflowActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWorkflowActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWorkflowActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWorkflowActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWorkflowActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.InvokeWorkflowActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.InvokeWorkflowActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_InvokeWorkflowActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_InvokeWorkflowActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.InvokeWorkflowActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_InvokeWorkflowActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWorkflowActivity_InstanceId" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty">
      <topicdata group="api" />
      <apidata name="InstanceIdProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWorkflowActivity_InstanceIdProperty" />
    </api>
    <api id="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking">
      <topicdata group="api" />
      <apidata name="Invoking" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_InvokeWorkflowActivity_Invoking" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent">
      <topicdata group="api" />
      <apidata name="InvokingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWorkflowActivity_InvokingEvent" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWorkflowActivity_ParameterBindings" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWorkflowActivity_ParameterBindingsProperty" />
    </api>
    <api id="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CanFilterType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_InvokeWorkflowActivity_System_Workflow_ComponentModel_Design_ITypeFilterProvider_CanFilterType_2_4ab7a212" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <topicdata group="api" />
      <apidata name="FilterDescription" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWorkflowActivity_System_Workflow_ComponentModel_Design_ITypeFilterProvider_FilterDescription" />
    </api>
    <api id="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow">
      <topicdata group="api" />
      <apidata name="TargetWorkflow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_InvokeWorkflowActivity_TargetWorkflow" />
    </api>
    <api id="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty">
      <topicdata group="api" />
      <apidata name="TargetWorkflowProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_InvokeWorkflowActivity_TargetWorkflowProperty" />
    </api>
    <api id="T:System.Workflow.Activities.ListenActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ListenActivity" />
      <apidata name="ListenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Listen.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_ListenActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ListenActivity">
      <topicdata name="ListenActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ListenActivity" />
      <apidata name="ListenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.#ctor">
          <element api="M:System.Workflow.Activities.ListenActivity.#ctor" />
          <element api="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ListenActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ListenActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.ListenActivity">
      <topicdata name="ListenActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ListenActivity" />
      <apidata name="ListenActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ListenActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.ListenActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_ListenActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.ListenActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ListenActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ListenActivity.#ctor" />
        <element api="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ListenActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.ListenActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ListenActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ListenActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.ListenActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ListenActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ListenActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.ListenActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ListenActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ListenActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.ListenActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ListenActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ListenActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.ListenActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ListenActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ListenActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.ListenActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ListenActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ListenActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ListenActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ListenActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ListenActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="T:System.Workflow.Activities.MessageEventSubscription">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.MessageEventSubscription" />
      <apidata name="MessageEventSubscription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_MessageEventSubscription" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.MessageEventSubscription">
      <topicdata name="MessageEventSubscription" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.MessageEventSubscription" />
      <apidata name="MessageEventSubscription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor">
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)" />
          <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)" />
        </element>
        <element api="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.MethodName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.QueueName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_MessageEventSubscription" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.MessageEventSubscription">
      <topicdata name="MessageEventSubscription" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.MessageEventSubscription" />
      <apidata name="MessageEventSubscription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.MethodName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.QueueName" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId" />
        <element api="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_MessageEventSubscription" />
    </api>
    <api id="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.MessageEventSubscription" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)" />
        <element api="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_MessageEventSubscription_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_MessageEventSubscription_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_MessageEventSubscription_ctor_2_18909e34" />
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_MessageEventSubscription_ctor_3_ced176f6" />
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_MessageEventSubscription_ctor_4_d81a2add" />
    </api>
    <api id="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.MessageEventSubscription.#ctor" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_MessageEventSubscription_ctor_5_5a724a66" />
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties">
      <topicdata group="api" />
      <apidata name="CorrelationProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Runtime.CorrelationProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_MessageEventSubscription_CorrelationProperties" />
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_MessageEventSubscription_InterfaceType" />
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_MessageEventSubscription_MethodName" />
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" set-visibility="family" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_MessageEventSubscription_QueueName" />
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId">
      <topicdata group="api" />
      <apidata name="SubscriptionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_MessageEventSubscription_SubscriptionId" />
    </api>
    <api id="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId">
      <topicdata group="api" />
      <apidata name="WorkflowInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_MessageEventSubscription_WorkflowInstanceId" />
    </api>
    <api id="T:System.Workflow.Activities.ParallelActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ParallelActivity" />
      <apidata name="ParallelActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption" ref="false" />
            <enumValue>
              <field name="Concurrent" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Parallel.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_ParallelActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ParallelActivity">
      <topicdata name="ParallelActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ParallelActivity" />
      <apidata name="ParallelActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.#ctor">
          <element api="M:System.Workflow.Activities.ParallelActivity.#ctor" />
          <element api="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ParallelActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.ParallelActivity">
      <topicdata name="ParallelActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ParallelActivity" />
      <apidata name="ParallelActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.ParallelActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_ParallelActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.ParallelActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ParallelActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ParallelActivity.#ctor" />
        <element api="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ParallelActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.ParallelActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ParallelActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ParallelActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.ParallelActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ParallelActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ParallelActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.ParallelActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ParallelActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ParallelActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.ParallelActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ParallelActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ParallelActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.ParallelActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ParallelActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ParallelActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.ParallelActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ParallelActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ParallelActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ParallelActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ParallelActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ParallelActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="T:System.Workflow.Activities.PolicyActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Rule.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_PolicyActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.PolicyActivity">
      <topicdata name="PolicyActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.#ctor">
          <element api="M:System.Workflow.Activities.PolicyActivity.#ctor" />
          <element api="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.PolicyActivity.RuleSetReference" />
        <element api="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.PolicyActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_PolicyActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.PolicyActivity">
      <topicdata name="PolicyActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.PolicyActivity.RuleSetReference" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_PolicyActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.PolicyActivity">
      <topicdata name="PolicyActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.PolicyActivity" />
      <apidata name="PolicyActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_PolicyActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.PolicyActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.PolicyActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.PolicyActivity.#ctor" />
        <element api="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_PolicyActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.PolicyActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.PolicyActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_PolicyActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.PolicyActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.PolicyActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_PolicyActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.PolicyActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.PolicyActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_PolicyActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.PolicyActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.PolicyActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_PolicyActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.PolicyActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.PolicyActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_PolicyActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.PolicyActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.PolicyActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_PolicyActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.PolicyActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_PolicyActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.PolicyActivity.RuleSetReference">
      <topicdata group="api" />
      <apidata name="RuleSetReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSetReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_PolicyActivity_RuleSetReference" />
    </api>
    <api id="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty">
      <topicdata group="api" />
      <apidata name="RuleSetReferenceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_PolicyActivity_RuleSetReferenceProperty" />
    </api>
    <api id="T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Replicator.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption" ref="false" />
            <enumValue>
              <field name="Concurrent" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_ReplicatorActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor">
          <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
          <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Completed" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Initialized" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent" />
        <element api="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ReplicatorActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.ReplicatorActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_ReplicatorActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" />
        <element api="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ReplicatorActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Completed" />
        <element api="E:System.Workflow.Activities.ReplicatorActivity.Initialized" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_ReplicatorActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.ReplicatorActivity">
      <topicdata name="ReplicatorActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name="ReplicatorActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent" />
        <element api="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_ReplicatorActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
        <element api="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ReplicatorActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.ReplicatorActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ReplicatorActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.ReplicatorActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ReplicatorActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.ReplicatorActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ReplicatorActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.ReplicatorActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ReplicatorActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.ReplicatorActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_ReplicatorActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ReplicatorActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ReplicatorActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete">
      <topicdata group="api" />
      <apidata name="AllChildrenComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorActivity_AllChildrenComplete" />
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted">
      <topicdata group="api" />
      <apidata name="ChildCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_ReplicatorActivity_ChildCompleted" />
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent">
      <topicdata group="api" />
      <apidata name="ChildCompletedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ReplicatorActivity_ChildCompletedEvent" />
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized">
      <topicdata group="api" />
      <apidata name="ChildInitialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_ReplicatorActivity_ChildInitialized" />
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent">
      <topicdata group="api" />
      <apidata name="ChildInitializedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ReplicatorActivity_ChildInitializedEvent" />
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.Completed">
      <topicdata group="api" />
      <apidata name="Completed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_ReplicatorActivity_Completed" />
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent">
      <topicdata group="api" />
      <apidata name="CompletedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ReplicatorActivity_CompletedEvent" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData">
      <topicdata group="api" />
      <apidata name="CurrentChildData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorActivity_CurrentChildData" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex">
      <topicdata group="api" />
      <apidata name="CurrentIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorActivity_CurrentIndex" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities">
      <topicdata group="api" />
      <apidata name="DynamicActivities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorActivity_DynamicActivities" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType">
      <topicdata group="api" />
      <apidata name="ExecutionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.ExecutionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorActivity_ExecutionType" />
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty">
      <topicdata group="api" />
      <apidata name="ExecutionTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ReplicatorActivity_ExecutionTypeProperty" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData">
      <topicdata group="api" />
      <apidata name="InitialChildData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorActivity_InitialChildData" />
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty">
      <topicdata group="api" />
      <apidata name="InitialChildDataProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ReplicatorActivity_InitialChildDataProperty" />
    </api>
    <api id="E:System.Workflow.Activities.ReplicatorActivity.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_ReplicatorActivity_Initialized" />
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent">
      <topicdata group="api" />
      <apidata name="InitializedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ReplicatorActivity_InitializedEvent" />
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsExecuting" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_ReplicatorActivity_IsExecuting_1_cd2d7ec9" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition">
      <topicdata group="api" />
      <apidata name="UntilCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorActivity_UntilCondition" />
    </api>
    <api id="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty">
      <topicdata group="api" />
      <apidata name="UntilConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_ReplicatorActivity_UntilConditionProperty" />
    </api>
    <api id="T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.ReplicatorChildEventArgs" />
      <apidata name="ReplicatorChildEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_ReplicatorChildEventArgs" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <topicdata name="ReplicatorChildEventArgs" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.ReplicatorChildEventArgs" />
      <apidata name="ReplicatorChildEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.ReplicatorChildEventArgs.#ctor(System.Object,System.Workflow.ComponentModel.Activity)" />
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity" />
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_ReplicatorChildEventArgs" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <topicdata name="ReplicatorChildEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.ReplicatorChildEventArgs" />
      <apidata name="ReplicatorChildEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity" />
        <element api="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_ReplicatorChildEventArgs" />
    </api>
    <api id="M:System.Workflow.Activities.ReplicatorChildEventArgs.#ctor(System.Object,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="instanceData">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_ReplicatorChildEventArgs_ctor_2_1f26e3bc" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorChildEventArgs_Activity" />
    </api>
    <api id="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData">
      <topicdata group="api" />
      <apidata name="InstanceData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.ReplicatorChildEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_ReplicatorChildEventArgs_InstanceData" />
    </api>
    <api id="T:System.Workflow.Activities.SequenceActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequenceActivity" />
      <apidata name="SequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.EventDrivenActivity" ref="true" />
          <type api="T:System.Workflow.Activities.IfElseBranchActivity" ref="true" />
          <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
          <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
          <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
          <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
          <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_SequenceActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.SequenceActivity">
      <topicdata name="SequenceActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.SequenceActivity" />
      <apidata name="SequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.#ctor">
          <element api="M:System.Workflow.Activities.SequenceActivity.#ctor" />
          <element api="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_SequenceActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.SequenceActivity">
      <topicdata name="SequenceActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SequenceActivity" />
      <apidata name="SequenceActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.SequenceActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_SequenceActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequenceActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequenceActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.SequenceActivity.#ctor" />
        <element api="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequenceActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequenceActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequenceActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequenceActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequenceActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequenceActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequenceActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequenceActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequenceActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequenceActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequenceActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequenceActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequenceActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequenceActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequenceActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequenceActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequenceActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_SequenceActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequenceActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_SequenceActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequenceActivity_Cancel_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequenceActivity_Execute_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleFault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequenceActivity_HandleFault_2_26b8069e" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="OnActivityChangeRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="removedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequenceActivity_OnActivityChangeRemove_2_4eb1ee9f" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="OnSequenceComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequenceActivity_OnSequenceComplete_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="OnWorkflowChangesCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequenceActivity_OnWorkflowChangesCompleted_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequenceActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.SequentialWorkflow.bmp</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_SequentialWorkflowActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
          <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
          <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)" />
        </element>
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed" />
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent" />
        <element api="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized" />
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_SequentialWorkflowActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_SequentialWorkflowActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_SequentialWorkflowActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed" />
        <element api="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_SequentialWorkflowActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.SequentialWorkflowActivity">
      <topicdata name="SequentialWorkflowActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name="SequentialWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent" />
        <element api="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_SequentialWorkflowActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
        <element api="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequentialWorkflowActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequentialWorkflowActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequentialWorkflowActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequentialWorkflowActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequentialWorkflowActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequentialWorkflowActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequentialWorkflowActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.SequentialWorkflowActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SequentialWorkflowActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SequentialWorkflowActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_SequentialWorkflowActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SequentialWorkflowActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_SequentialWorkflowActivity_ctor_1_61b4e77c" />
    </api>
    <api id="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed">
      <topicdata group="api" />
      <apidata name="Completed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_SequentialWorkflowActivity_Completed" />
    </api>
    <api id="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent">
      <topicdata group="api" />
      <apidata name="CompletedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_SequentialWorkflowActivity_CompletedEvent" />
    </api>
    <api id="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition">
      <topicdata group="api" />
      <apidata name="DynamicUpdateCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_SequentialWorkflowActivity_DynamicUpdateCondition" />
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequentialWorkflowActivity_Execute_1_95a0979d" />
    </api>
    <api id="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_SequentialWorkflowActivity_Initialized" />
    </api>
    <api id="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent">
      <topicdata group="api" />
      <apidata name="InitializedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_SequentialWorkflowActivity_InitializedEvent" />
    </api>
    <api id="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="OnSequenceComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SequentialWorkflowActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_SequentialWorkflowActivity_OnSequenceComplete_1_95a0979d" />
    </api>
    <api id="T:System.Workflow.Activities.SetStateActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.SetStateActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_SetStateActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.SetStateActivity">
      <topicdata name="SetStateActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.#ctor">
          <element api="M:System.Workflow.Activities.SetStateActivity.#ctor" />
          <element api="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.SetStateActivity.TargetStateName" />
        <element api="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.SetStateActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_SetStateActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.SetStateActivity">
      <topicdata name="SetStateActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.SetStateActivity.TargetStateName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_SetStateActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.SetStateActivity">
      <topicdata name="SetStateActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.SetStateActivity" />
      <apidata name="SetStateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_SetStateActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.SetStateActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.SetStateActivity.#ctor" />
        <element api="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SetStateActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.SetStateActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SetStateActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.SetStateActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SetStateActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.SetStateActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SetStateActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.SetStateActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SetStateActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.SetStateActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_SetStateActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.SetStateActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SetStateActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_SetStateActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.SetStateActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_SetStateActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.SetStateActivity.TargetStateName">
      <topicdata group="api" />
      <apidata name="TargetStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_SetStateActivity_TargetStateName" />
    </api>
    <api id="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty">
      <topicdata group="api" />
      <apidata name="TargetStateNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_SetStateActivity_TargetStateNameProperty" />
    </api>
    <api id="T:System.Workflow.Activities.SetStateEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.SetStateEventArgs" />
      <apidata name="SetStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_SetStateEventArgs" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.SetStateEventArgs">
      <topicdata name="SetStateEventArgs" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.SetStateEventArgs" />
      <apidata name="SetStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.SetStateEventArgs.#ctor(System.String)" />
        <element api="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_SetStateEventArgs" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.SetStateEventArgs">
      <topicdata name="SetStateEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.SetStateEventArgs" />
      <apidata name="SetStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_SetStateEventArgs" />
    </api>
    <api id="M:System.Workflow.Activities.SetStateEventArgs.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="targetStateName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateEventArgs" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_SetStateEventArgs_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName">
      <topicdata group="api" />
      <apidata name="TargetStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.SetStateEventArgs" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_SetStateEventArgs_TargetStateName" />
    </api>
    <api id="T:System.Workflow.Activities.StateActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_StateActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.StateActivity">
      <topicdata name="StateActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.StateActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
        <element api="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.StateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_StateActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateActivity">
      <topicdata name="StateActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.Activities.StateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.StateActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_StateActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.StateActivity">
      <topicdata name="StateActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.StateActivity" />
      <apidata name="StateActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_StateActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateActivity_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivity_Cancel_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivity_Execute_1_95a0979d" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)">
      <topicdata group="api" />
      <apidata name="GetDynamicActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childActivityName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivity_GetDynamicActivity_1_72eac341" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivity_Initialize_1_e75224d5" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="OnActivityChangeAdd" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="addedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivity_OnActivityChangeAdd_2_4eb1ee9f" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivity_OnClosed_1_e75224d5" />
    </api>
    <api id="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey">
      <topicdata group="api" />
      <apidata name="StateChangeTrackingDataKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_StateActivity_StateChangeTrackingDataKey" />
    </api>
    <api id="T:System.Workflow.Activities.StateActivityValidator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateActivityValidator" />
      <apidata name="StateActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Compiler.Validator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_StateActivityValidator" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.StateActivityValidator">
      <topicdata name="StateActivityValidator" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.StateActivityValidator" />
      <apidata name="StateActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.#ctor" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_StateActivityValidator" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateActivityValidator">
      <topicdata name="StateActivityValidator" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateActivityValidator" />
      <apidata name="StateActivityValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_StateActivityValidator" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivityValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateActivityValidator_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
          <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="manager">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationManager" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivityValidator_Validate_2_93a6680c" />
    </api>
    <api id="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <topicdata group="api" />
      <apidata name="ValidateActivityChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
          <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationError" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateActivityValidator_ValidateActivityChange_2_492545b5" />
    </api>
    <api id="T:System.Workflow.Activities.StateFinalizationActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity" />
      <apidata name="StateFinalizationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateFinalizationActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_StateFinalizationActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity">
      <topicdata name="StateFinalizationActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.StateFinalizationActivity" />
      <apidata name="StateFinalizationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.StateFinalizationActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_StateFinalizationActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateFinalizationActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateFinalizationActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateFinalizationActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateFinalizationActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateFinalizationActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateFinalizationActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateFinalizationActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateFinalizationActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateFinalizationActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateFinalizationActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateFinalizationActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateFinalizationActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.StateFinalizationActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateFinalizationActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateFinalizationActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateFinalizationActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateFinalizationActivity_ctor_1_61b4e77c" />
    </api>
    <api id="T:System.Workflow.Activities.StateInitializationActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateInitializationActivity" />
      <apidata name="StateInitializationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateInitializationActivity.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_StateInitializationActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.StateInitializationActivity">
      <topicdata name="StateInitializationActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.StateInitializationActivity" />
      <apidata name="StateInitializationActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.StateInitializationActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_StateInitializationActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateInitializationActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateInitializationActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateInitializationActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateInitializationActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateInitializationActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateInitializationActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateInitializationActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateInitializationActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateInitializationActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateInitializationActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateInitializationActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateInitializationActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateInitializationActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateInitializationActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateInitializationActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateInitializationActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateInitializationActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.StateInitializationActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateInitializationActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateInitializationActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateInitializationActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateInitializationActivity_ctor_1_61b4e77c" />
    </api>
    <api id="T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.StateMachineWorkflowActivity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.StateActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_StateMachineWorkflowActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata name="StateMachineWorkflowActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)" />
        <element api="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_StateMachineWorkflowActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata name="StateMachineWorkflowActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_StateMachineWorkflowActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <topicdata name="StateMachineWorkflowActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name="StateMachineWorkflowActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty" />
        <element api="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_StateMachineWorkflowActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateMachineWorkflowActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateMachineWorkflowActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName">
      <topicdata group="api" />
      <apidata name="CompletedStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowActivity_CompletedStateName" />
    </api>
    <api id="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty">
      <topicdata group="api" />
      <apidata name="CompletedStateNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_StateMachineWorkflowActivity_CompletedStateNameProperty" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName">
      <topicdata group="api" />
      <apidata name="CurrentStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowActivity_CurrentStateName" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition">
      <topicdata group="api" />
      <apidata name="DynamicUpdateCondition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowActivity_DynamicUpdateCondition" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName">
      <topicdata group="api" />
      <apidata name="InitialStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" ref="true" />
          <argument>
            <type api="T:System.Workflow.ComponentModel.Compiler.ValidationOption" ref="false" />
            <enumValue>
              <field name="Optional" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowActivity_InitialStateName" />
    </api>
    <api id="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty">
      <topicdata group="api" />
      <apidata name="InitialStateNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_StateMachineWorkflowActivity_InitialStateNameProperty" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName">
      <topicdata group="api" />
      <apidata name="PreviousStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowActivity_PreviousStateName" />
    </api>
    <api id="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName">
      <topicdata group="api" />
      <apidata name="SetStateQueueName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_StateMachineWorkflowActivity_SetStateQueueName" />
    </api>
    <api id="T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="StateMachineWorkflowInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_StateMachineWorkflowInstance" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <topicdata name="StateMachineWorkflowInstance" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="StateMachineWorkflowInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.#ctor(System.Workflow.Runtime.WorkflowRuntime,System.Guid)" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
        </element>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.States" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_StateMachineWorkflowInstance" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <topicdata name="StateMachineWorkflowInstance" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="StateMachineWorkflowInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
        </element>
        <element api="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState">
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)" />
          <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_StateMachineWorkflowInstance" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <topicdata name="StateMachineWorkflowInstance" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="StateMachineWorkflowInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.States" />
        <element api="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_StateMachineWorkflowInstance" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem">
      <topicdata name="EnqueueItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="EnqueueItem" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowInstance_EnqueueItem" />
    </api>
    <api id="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState">
      <topicdata name="SetState" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.StateMachineWorkflowInstance" />
      <apidata name="SetState" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)" />
        <element api="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_StateMachineWorkflowInstance_SetState" />
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.#ctor(System.Workflow.Runtime.WorkflowRuntime,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="runtime">
          <type api="T:System.Workflow.Runtime.WorkflowRuntime" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_StateMachineWorkflowInstance_ctor_2_78d24ec8" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState">
      <topicdata group="api" />
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_CurrentState" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName">
      <topicdata group="api" />
      <apidata name="CurrentStateName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_CurrentStateName" />
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)">
      <topicdata group="api" />
      <apidata name="EnqueueItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateMachineWorkflowInstance_EnqueueItem_2_e401cd59" />
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
      <topicdata group="api" />
      <apidata name="EnqueueItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queueName">
          <type api="T:System.IComparable" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="pendingWork">
          <type api="T:System.Workflow.Runtime.IPendingWork" ref="true" />
        </parameter>
        <parameter name="workItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateMachineWorkflowInstance_EnqueueItem_4_ebb90848" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_InstanceId" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions">
      <topicdata group="api" />
      <apidata name="PossibleStateTransitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_PossibleStateTransitions" />
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)">
      <topicdata group="api" />
      <apidata name="SetState" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetStateName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateMachineWorkflowInstance_SetState_1_72eac341" />
    </api>
    <api id="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)">
      <topicdata group="api" />
      <apidata name="SetState" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.StateMachineWorkflowInstance.SetState" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetState">
          <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_StateMachineWorkflowInstance_SetState_1_4096bef3" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory">
      <topicdata group="api" />
      <apidata name="StateHistory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_StateHistory" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow">
      <topicdata group="api" />
      <apidata name="StateMachineWorkflow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.StateMachineWorkflowActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_StateMachineWorkflow" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.States">
      <topicdata group="api" />
      <apidata name="States" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_States" />
    </api>
    <api id="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance">
      <topicdata group="api" />
      <apidata name="WorkflowInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Runtime.WorkflowInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.StateMachineWorkflowInstance" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_StateMachineWorkflowInstance_WorkflowInstance" />
    </api>
    <api id="T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceOut.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_WebServiceFaultActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
          <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.Fault" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty" />
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty" />
        <element api="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.WebServiceFaultActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WebServiceFaultActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.Fault" />
        <element api="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_WebServiceFaultActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_WebServiceFaultActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.WebServiceFaultActivity">
      <topicdata name="WebServiceFaultActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name="WebServiceFaultActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_WebServiceFaultActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceFaultActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceFaultActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceFaultActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceFaultActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceFaultActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceFaultActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceFaultActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceFaultActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceFaultActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceFaultActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceFaultActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceFaultActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebServiceFaultActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceFaultActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebServiceFaultActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceFaultActivity.Fault">
      <topicdata group="api" />
      <apidata name="Fault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceFaultActivity_Fault" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty">
      <topicdata group="api" />
      <apidata name="FaultProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceFaultActivity_FaultProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName">
      <topicdata group="api" />
      <apidata name="InputActivityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceFaultActivity_InputActivityName" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty">
      <topicdata group="api" />
      <apidata name="InputActivityNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceFaultActivity_InputActivityNameProperty" />
    </api>
    <api id="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault">
      <topicdata group="api" />
      <apidata name="SendingFault" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_WebServiceFaultActivity_SendingFault" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent">
      <topicdata group="api" />
      <apidata name="SendingFaultEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceFaultActivity_SendingFaultEvent" />
    </api>
    <api id="T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceIn.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_WebServiceInputActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor">
          <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)" />
        </element>
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty" />
        <element api="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.Roles" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WebServiceInputActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.WebServiceInputActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WebServiceInputActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.Roles" />
        <element api="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_WebServiceInputActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_WebServiceInputActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.WebServiceInputActivity">
      <topicdata name="WebServiceInputActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name="WebServiceInputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_WebServiceInputActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceInputActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceInputActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceInputActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceInputActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceInputActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceInputActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceInputActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceInputActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceInputActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceInputActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceInputActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceInputActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebServiceInputActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceInputActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebServiceInputActivity_ctor_1_61b4e77c" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty">
      <topicdata group="api" />
      <apidata name="ActivitySubscribedProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceInputActivity_ActivitySubscribedProperty" />
    </api>
    <api id="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived">
      <topicdata group="api" />
      <apidata name="InputReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_WebServiceInputActivity_InputReceived" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent">
      <topicdata group="api" />
      <apidata name="InputReceivedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceInputActivity_InputReceivedEvent" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType">
      <topicdata group="api" />
      <apidata name="InterfaceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceInputActivity_InterfaceType" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty">
      <topicdata group="api" />
      <apidata name="InterfaceTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceInputActivity_InterfaceTypeProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating">
      <topicdata group="api" />
      <apidata name="IsActivating" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceInputActivity_IsActivating" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty">
      <topicdata group="api" />
      <apidata name="IsActivatingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceInputActivity_IsActivatingProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceInputActivity_MethodName" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty">
      <topicdata group="api" />
      <apidata name="MethodNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceInputActivity_MethodNameProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceInputActivity_ParameterBindings" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceInputActivity_ParameterBindingsProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceInputActivity_Roles" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty">
      <topicdata group="api" />
      <apidata name="RolesProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceInputActivity_RolesProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.Activities.IEventActivity.QueueName">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceInputActivity_System_Workflow_Activities_IEventActivity_QueueName" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebServiceInputActivity_System_Workflow_Activities_IEventActivity_Subscribe_2_9534996f" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="parentContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="parentEventHandler">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <type api="T:System.Workflow.Activities.IEventActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebServiceInputActivity_System_Workflow_Activities_IEventActivity_Unsubscribe_2_9534996f" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebServiceInputActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_QueueEventArgs}_OnEvent_2_5fe65c61" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebServiceInputActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetAccessType_2_a0c4af46" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebServiceInputActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetPropertyType_2_a0c4af46" />
    </api>
    <api id="T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.WebServiceOut.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_WebServiceOutputActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
          <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty" />
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty" />
        <element api="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WebServiceOutputActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.WebServiceOutputActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WebServiceOutputActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName" />
        <element api="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_WebServiceOutputActivity" />
    </api>
    <api id="Events.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Events_T_System_Workflow_Activities_WebServiceOutputActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.WebServiceOutputActivity">
      <topicdata name="WebServiceOutputActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name="WebServiceOutputActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty" />
        <element api="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_WebServiceOutputActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceOutputActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceOutputActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceOutputActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceOutputActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceOutputActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceOutputActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceOutputActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceOutputActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceOutputActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebServiceOutputActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebServiceOutputActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebServiceOutputActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebServiceOutputActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebServiceOutputActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebServiceOutputActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName">
      <topicdata group="api" />
      <apidata name="InputActivityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceOutputActivity_InputActivityName" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty">
      <topicdata group="api" />
      <apidata name="InputActivityNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceOutputActivity_InputActivityNameProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings">
      <topicdata group="api" />
      <apidata name="ParameterBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebServiceOutputActivity_ParameterBindings" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty">
      <topicdata group="api" />
      <apidata name="ParameterBindingsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceOutputActivity_ParameterBindingsProperty" />
    </api>
    <api id="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput">
      <topicdata group="api" />
      <apidata name="SendingOutput" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="E_System_Workflow_Activities_WebServiceOutputActivity_SendingOutput" />
    </api>
    <api id="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent">
      <topicdata group="api" />
      <apidata name="SendingOutputEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WebServiceOutputActivity_SendingOutputEvent" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebServiceOutputActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetAccessType_2_a0c4af46" />
    </api>
    <api id="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebServiceOutputActivity_System_Workflow_ComponentModel_IDynamicPropertyTypeProvider_GetPropertyType_2_a0c4af46" />
    </api>
    <api id="T:System.Workflow.Activities.WebWorkflowRole">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebWorkflowRole" />
      <apidata name="WebWorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_WebWorkflowRole" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WebWorkflowRole">
      <topicdata name="WebWorkflowRole" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WebWorkflowRole" />
      <apidata name="WebWorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor">
          <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)" />
        <element api="P:System.Workflow.Activities.WebWorkflowRole.Name" />
        <element api="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WebWorkflowRole" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WebWorkflowRole">
      <topicdata name="WebWorkflowRole" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WebWorkflowRole" />
      <apidata name="WebWorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WebWorkflowRole" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.WebWorkflowRole">
      <topicdata name="WebWorkflowRole" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WebWorkflowRole" />
      <apidata name="WebWorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.WebWorkflowRole.Name" />
        <element api="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_WebWorkflowRole" />
    </api>
    <api id="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WebWorkflowRole" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WebWorkflowRole_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor" />
      <parameters>
        <parameter name="roleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebWorkflowRole_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WebWorkflowRole.#ctor" />
      <parameters>
        <parameter name="roleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WebWorkflowRole_ctor_2_6608d038" />
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities">
      <topicdata group="api" />
      <apidata name="GetIdentities" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebWorkflowRole_GetIdentities" />
    </api>
    <api id="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WebWorkflowRole_IncludesIdentity_1_72eac341" />
    </api>
    <api id="P:System.Workflow.Activities.WebWorkflowRole.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.WorkflowRole.Name">
          <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebWorkflowRole_Name" />
    </api>
    <api id="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider">
      <topicdata group="api" />
      <apidata name="RoleProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WebWorkflowRole_RoleProvider" />
    </api>
    <api id="T:System.Workflow.Activities.WhileActivity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.While.png</value>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_WhileActivity" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.#ctor">
          <element api="M:System.Workflow.Activities.WhileActivity.#ctor" />
          <element api="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.WhileActivity.Condition" />
        <element api="F:System.Workflow.Activities.WhileActivity.ConditionProperty" />
        <element api="P:System.Workflow.Activities.WhileActivity.DynamicActivity" />
        <element api="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.WhileActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WhileActivity" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.WhileActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.Activities.WhileActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WhileActivity" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.WhileActivity.Condition" />
        <element api="P:System.Workflow.Activities.WhileActivity.DynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_WhileActivity" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.WhileActivity">
      <topicdata name="WhileActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.WhileActivity" />
      <apidata name="WhileActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.WhileActivity.ConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_WhileActivity" />
    </api>
    <api id="Overload:System.Workflow.Activities.WhileActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WhileActivity" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WhileActivity.#ctor" />
        <element api="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WhileActivity_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.WhileActivity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WhileActivity" allInherited="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WhileActivity_GetActivityByName" />
    </api>
    <api id="Overload:System.Workflow.Activities.WhileActivity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WhileActivity" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WhileActivity_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.WhileActivity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WhileActivity" allInherited="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WhileActivity_Save" />
    </api>
    <api id="Overload:System.Workflow.Activities.WhileActivity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WhileActivity" allInherited="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WhileActivity_TrackData" />
    </api>
    <api id="Overload:System.Workflow.Activities.WhileActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WhileActivity" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WhileActivity_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.WhileActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WhileActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WhileActivity_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WhileActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WhileActivity_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.WhileActivity.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WhileActivity_Condition" />
    </api>
    <api id="F:System.Workflow.Activities.WhileActivity.ConditionProperty">
      <topicdata group="api" />
      <apidata name="ConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_WhileActivity_ConditionProperty" />
    </api>
    <api id="P:System.Workflow.Activities.WhileActivity.DynamicActivity">
      <topicdata group="api" />
      <apidata name="DynamicActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WhileActivity_DynamicActivity" />
    </api>
    <api id="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WhileActivity_System_Workflow_ComponentModel_IActivityEventListener{System_Workflow_ComponentModel_ActivityExecutionStatusChangedEventArgs}_OnEvent_2_845ba0fe" />
    </api>
    <api id="T:System.Workflow.Activities.WorkflowAuthorizationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowAuthorizationException" />
      <apidata name="WorkflowAuthorizationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_WorkflowAuthorizationException" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WorkflowAuthorizationException">
      <topicdata name="WorkflowAuthorizationException" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WorkflowAuthorizationException" />
      <apidata name="WorkflowAuthorizationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WorkflowAuthorizationException" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowAuthorizationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowAuthorizationException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowAuthorizationException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowAuthorizationException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowAuthorizationException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowAuthorizationException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.WorkflowAuthorizationException.#ctor" />
      <parameters>
        <parameter name="activityName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="principalName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowAuthorizationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowAuthorizationException_ctor_2_6608d038" />
    </api>
    <api id="T:System.Workflow.Activities.WorkflowRole">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRole" />
      <apidata name="WorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.ActiveDirectoryRole" ref="true" />
          <type api="T:System.Workflow.Activities.WebWorkflowRole" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_WorkflowRole" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WorkflowRole">
      <topicdata name="WorkflowRole" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WorkflowRole" />
      <apidata name="WorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowRole.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)" />
        <element api="P:System.Workflow.Activities.WorkflowRole.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WorkflowRole" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowRole">
      <topicdata name="WorkflowRole" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowRole" />
      <apidata name="WorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowRole.GetIdentities" />
        <element api="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WorkflowRole" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.WorkflowRole">
      <topicdata name="WorkflowRole" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WorkflowRole" />
      <apidata name="WorkflowRole" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.WorkflowRole.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_WorkflowRole" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRole.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowRole_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
      <topicdata group="api" />
      <apidata name="GetIdentities" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WorkflowRole_GetIdentities" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WorkflowRole_IncludesIdentity_1_72eac341" />
    </api>
    <api id="P:System.Workflow.Activities.WorkflowRole.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WorkflowRole_Name" />
    </api>
    <api id="T:System.Workflow.Activities.WorkflowRoleCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" />
      <apidata name="WorkflowRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.WorkflowRole" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_WorkflowRoleCollection" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection">
      <topicdata name="WorkflowRoleCollection" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WorkflowRoleCollection" />
      <apidata name="WorkflowRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.List`1.Add(`0)" />
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="M:System.Collections.Generic.List`1.Clear" />
        <element api="M:System.Collections.Generic.List`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="P:System.Collections.Generic.List`1.Count" />
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.IndexOf">
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{`0}#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WorkflowRoleCollection" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowRoleCollection">
      <topicdata name="WorkflowRoleCollection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowRoleCollection" />
      <apidata name="WorkflowRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.List`1.Add(`0)" />
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear" />
        <element api="M:System.Collections.Generic.List`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.IndexOf">
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.WorkflowRoleCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{`0}#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WorkflowRoleCollection" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.BinarySearch">
      <topicdata name="BinarySearch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="BinarySearch" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
        <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_BinarySearch" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_CopyTo" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindIndex">
      <topicdata name="FindIndex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="FindIndex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_FindIndex" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.FindLastIndex">
      <topicdata name="FindLastIndex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="FindLastIndex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_FindLastIndex" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_IndexOf" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.LastIndexOf">
      <topicdata name="LastIndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="LastIndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_LastIndexOf" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.Reverse">
      <topicdata name="Reverse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="Reverse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.Reverse" />
        <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_Reverse" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowRoleCollection.Sort">
      <topicdata name="Sort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowRoleCollection" allInherited="true" />
      <apidata name="Sort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.Sort" />
        <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
        <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
        <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowRoleCollection_Sort" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowRoleCollection_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="IncludesIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowRoleCollection" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WorkflowRoleCollection_IncludesIdentity_1_72eac341" />
    </api>
    <api id="T:System.Workflow.Activities.WorkflowSubscriptionService">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowSubscriptionService" />
      <apidata name="WorkflowSubscriptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_WorkflowSubscriptionService" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WorkflowSubscriptionService">
      <topicdata name="WorkflowSubscriptionService" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WorkflowSubscriptionService" />
      <apidata name="WorkflowSubscriptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.#ctor" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WorkflowSubscriptionService" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowSubscriptionService">
      <topicdata name="WorkflowSubscriptionService" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowSubscriptionService" />
      <apidata name="WorkflowSubscriptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)" />
        <element api="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WorkflowSubscriptionService" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowSubscriptionService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowSubscriptionService" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowSubscriptionService_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)">
      <topicdata group="api" />
      <apidata name="CreateSubscription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="subscription">
          <type api="T:System.Workflow.Activities.MessageEventSubscription" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowSubscriptionService" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WorkflowSubscriptionService_CreateSubscription_1_5505d4c9" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)">
      <topicdata group="api" />
      <apidata name="DeleteSubscription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="subscriptionId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowSubscriptionService" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WorkflowSubscriptionService_DeleteSubscription_1_a685c619" />
    </api>
    <api id="T:System.Workflow.Activities.WorkflowWebService">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowWebService" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Web.Services.WebService" ref="true" />
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="T_System_Workflow_Activities_WorkflowWebService" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.WorkflowWebService">
      <topicdata name="WorkflowWebService" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.WorkflowWebService" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="Overload:System.Workflow.Activities.WorkflowWebService.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="P:System.Web.Services.WebService.Application" />
        <element api="P:System.Web.Services.WebService.Context" />
        <element api="P:System.Web.Services.WebService.Server" />
        <element api="P:System.Web.Services.WebService.Session" />
        <element api="P:System.Web.Services.WebService.SoapVersion" />
        <element api="P:System.Web.Services.WebService.User" />
        <element api="M:System.Workflow.Activities.WorkflowWebService.#ctor(System.Type)" />
        <element api="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])" />
        <element api="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_WorkflowWebService" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.WorkflowWebService">
      <topicdata name="WorkflowWebService" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.WorkflowWebService" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.WorkflowWebService.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_WorkflowWebService" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.WorkflowWebService">
      <topicdata name="WorkflowWebService" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.WorkflowWebService" />
      <apidata name="WorkflowWebService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Web.Services.WebService.Application" />
        <element api="P:System.Web.Services.WebService.Context" />
        <element api="P:System.Web.Services.WebService.Server" />
        <element api="P:System.Web.Services.WebService.Session" />
        <element api="P:System.Web.Services.WebService.SoapVersion" />
        <element api="P:System.Web.Services.WebService.User" />
        <element api="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_WorkflowWebService" />
    </api>
    <api id="Overload:System.Workflow.Activities.WorkflowWebService.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.WorkflowWebService" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" />
      </containers>
      <file name="O_T_System_Workflow_Activities_WorkflowWebService_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowWebService.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="workflowType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_WorkflowWebService_ctor_1_90c95d47" />
    </api>
    <api id="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="interfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isActivation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_WorkflowWebService_Invoke_4_27401dbe" />
    </api>
    <api id="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime">
      <topicdata group="api" />
      <apidata name="WorkflowRuntime" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Runtime.WorkflowRuntime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities" />
        <type api="T:System.Workflow.Activities.WorkflowWebService" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_WorkflowWebService_WorkflowRuntime" />
    </api>
    <api id="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" />
      <apidata name="ActiveDirectoryRoleFactoryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Configuration" />
      </containers>
      <file name="T_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration">
      <topicdata name="ActiveDirectoryRoleFactoryConfiguration" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" />
      <apidata name="ActiveDirectoryRoleFactoryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.#ctor" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DirectReports" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DistinguishedName" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Group" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Manager" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Member" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.RootPath" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Configuration" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration">
      <topicdata name="ActiveDirectoryRoleFactoryConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" />
      <apidata name="ActiveDirectoryRoleFactoryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="Overload:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DirectReports" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DistinguishedName" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Group" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Manager" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Member" />
        <element api="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.RootPath" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Configuration" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration" />
    </api>
    <api id="Overload:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" allInherited="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_Item" />
    </api>
    <api id="M:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_ctor" />
    </api>
    <api id="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DirectReports">
      <topicdata group="api" />
      <apidata name="DirectReports" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectReports</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>directReports</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_DirectReports" />
    </api>
    <api id="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DistinguishedName">
      <topicdata group="api" />
      <apidata name="DistinguishedName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DistiguishedName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>distinguishedName</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_DistinguishedName" />
    </api>
    <api id="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Group">
      <topicdata group="api" />
      <apidata name="Group" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Group</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>group</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_Group" />
    </api>
    <api id="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Manager">
      <topicdata group="api" />
      <apidata name="Manager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Manager</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>manager</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_Manager" />
    </api>
    <api id="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Member</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>member</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_Member" />
    </api>
    <api id="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.RootPath">
      <topicdata group="api" />
      <apidata name="RootPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Configuration" />
        <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RootPath</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
      <file name="P_System_Workflow_Activities_Configuration_ActiveDirectoryRoleFactoryConfiguration_RootPath" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.AddedConditionAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.AddedConditionAction" />
      <apidata name="AddedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_AddedConditionAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.AddedConditionAction">
      <topicdata name="AddedConditionAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.AddedConditionAction" />
      <apidata name="AddedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.AddedConditionAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionDefinition" />
        <element api="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionName" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_AddedConditionAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.AddedConditionAction">
      <topicdata name="AddedConditionAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.AddedConditionAction" />
      <apidata name="AddedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionDefinition" />
        <element api="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_AddedConditionAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.AddedConditionAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.AddedConditionAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedConditionAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_AddedConditionAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.AddedConditionAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedConditionAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_AddedConditionAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.AddedConditionAction.#ctor" />
      <parameters>
        <parameter name="addedConditionDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedConditionAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_AddedConditionAction_ctor_1_51e82137" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionDefinition">
      <topicdata group="api" />
      <apidata name="ConditionDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedConditionAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_AddedConditionAction_ConditionDefinition" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionName">
      <topicdata group="api" />
      <apidata name="ConditionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName">
          <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedConditionAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_AddedConditionAction_ConditionName" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.AddedRuleSetAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.AddedRuleSetAction" />
      <apidata name="AddedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_AddedRuleSetAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.AddedRuleSetAction">
      <topicdata name="AddedRuleSetAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.AddedRuleSetAction" />
      <apidata name="AddedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetDefinition" />
        <element api="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetName" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_AddedRuleSetAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.AddedRuleSetAction">
      <topicdata name="AddedRuleSetAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.AddedRuleSetAction" />
      <apidata name="AddedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetDefinition" />
        <element api="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_AddedRuleSetAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.AddedRuleSetAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedRuleSetAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_AddedRuleSetAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedRuleSetAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_AddedRuleSetAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor" />
      <parameters>
        <parameter name="addedRuleSetDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedRuleSetAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_AddedRuleSetAction_ctor_1_669718cf" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetDefinition">
      <topicdata group="api" />
      <apidata name="RuleSetDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedRuleSetAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_AddedRuleSetAction_RuleSetDefinition" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetName">
      <topicdata group="api" />
      <apidata name="RuleSetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName">
          <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.AddedRuleSetAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_AddedRuleSetAction_RuleSetName" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.IRuleExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.IRuleExpression" />
      <apidata name="IRuleExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_IRuleExpression" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.IRuleExpression">
      <topicdata name="IRuleExpression" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.IRuleExpression" />
      <apidata name="IRuleExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Clone" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Evaluate(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Match(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_IRuleExpression" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.IRuleExpression">
      <topicdata name="IRuleExpression" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.IRuleExpression" />
      <apidata name="IRuleExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Clone" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Evaluate(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Match(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_IRuleExpression" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.IRuleExpression.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
      <topicdata group="api" />
      <apidata name="AnalyzeUsage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="analysis">
          <type api="T:System.Workflow.Activities.Rules.RuleAnalysis" ref="true" />
        </parameter>
        <parameter name="isRead">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isWritten">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="qualifier">
          <type api="T:System.Workflow.Activities.Rules.RulePathQualifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.IRuleExpression" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_IRuleExpression_AnalyzeUsage_4_7a2ffb61" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.IRuleExpression.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.CodeDom.CodeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.IRuleExpression" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_IRuleExpression_Clone" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.IRuleExpression.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="Decompile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="stringBuilder">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="parentExpression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.IRuleExpression" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_IRuleExpression_Decompile_2_672b1c4d" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.IRuleExpression.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="execution">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.IRuleExpression" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_IRuleExpression_Evaluate_1_ec713a43" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.IRuleExpression.Match(System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.IRuleExpression" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_IRuleExpression_Match_1_4370aeb9" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
        <parameter name="isWritten">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.IRuleExpression" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_IRuleExpression_Validate_2_5ce8dddc" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RemovedConditionAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RemovedConditionAction" />
      <apidata name="RemovedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RemovedConditionAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RemovedConditionAction">
      <topicdata name="RemovedConditionAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RemovedConditionAction" />
      <apidata name="RemovedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionDefinition" />
        <element api="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionName" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RemovedConditionAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RemovedConditionAction">
      <topicdata name="RemovedConditionAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RemovedConditionAction" />
      <apidata name="RemovedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionDefinition" />
        <element api="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RemovedConditionAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RemovedConditionAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedConditionAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RemovedConditionAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedConditionAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RemovedConditionAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor" />
      <parameters>
        <parameter name="removedConditionDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedConditionAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RemovedConditionAction_ctor_1_51e82137" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionDefinition">
      <topicdata group="api" />
      <apidata name="ConditionDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedConditionAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RemovedConditionAction_ConditionDefinition" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionName">
      <topicdata group="api" />
      <apidata name="ConditionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName">
          <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedConditionAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RemovedConditionAction_ConditionName" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RemovedRuleSetAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RemovedRuleSetAction" />
      <apidata name="RemovedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RemovedRuleSetAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RemovedRuleSetAction">
      <topicdata name="RemovedRuleSetAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" />
      <apidata name="RemovedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetDefinition" />
        <element api="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetName" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RemovedRuleSetAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RemovedRuleSetAction">
      <topicdata name="RemovedRuleSetAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" />
      <apidata name="RemovedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetDefinition" />
        <element api="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RemovedRuleSetAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RemovedRuleSetAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RemovedRuleSetAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RemovedRuleSetAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor" />
      <parameters>
        <parameter name="removedRuleSetDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RemovedRuleSetAction_ctor_1_669718cf" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetDefinition">
      <topicdata group="api" />
      <apidata name="RuleSetDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RemovedRuleSetAction_RuleSetDefinition" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetName">
      <topicdata group="api" />
      <apidata name="RuleSetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName">
          <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RemovedRuleSetAction_RuleSetName" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.Rule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Rule" />
      <apidata name="Rule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_Rule" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.Rule">
      <topicdata name="Rule" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.Rule" />
      <apidata name="Rule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.Rule.#ctor">
          <element api="M:System.Workflow.Activities.Rules.Rule.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
          <element api="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.Rule.Active" />
        <element api="M:System.Workflow.Activities.Rules.Rule.Clone" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Condition" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Description" />
        <element api="P:System.Workflow.Activities.Rules.Rule.ElseActions" />
        <element api="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.Rule.GetHashCode" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Name" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Priority" />
        <element api="P:System.Workflow.Activities.Rules.Rule.ReevaluationBehavior" />
        <element api="P:System.Workflow.Activities.Rules.Rule.ThenActions" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_Rule" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.Rule">
      <topicdata name="Rule" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.Rule" />
      <apidata name="Rule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.Rule.Clone" />
        <element api="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.Rule.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_Rule" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.Rule">
      <topicdata name="Rule" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.Rule" />
      <apidata name="Rule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.Rule.Active" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Condition" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Description" />
        <element api="P:System.Workflow.Activities.Rules.Rule.ElseActions" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Name" />
        <element api="P:System.Workflow.Activities.Rules.Rule.Priority" />
        <element api="P:System.Workflow.Activities.Rules.Rule.ReevaluationBehavior" />
        <element api="P:System.Workflow.Activities.Rules.Rule.ThenActions" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_Rule" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Rule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Rule" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.Rule.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
        <element api="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Rule_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Rule.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Rule.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Rule_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Rule.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Rule_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Rule.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </parameter>
        <parameter name="thenActions">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Rule_ctor_3_90378163" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Rule.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </parameter>
        <parameter name="thenActions">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elseActions">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Rule_ctor_4_ef33db29" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.Active">
      <topicdata group="api" />
      <apidata name="Active" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_Active" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Rule.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_Rule_Clone" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_Condition" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_Description" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.ElseActions">
      <topicdata group="api" />
      <apidata name="ElseActions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_ElseActions" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_Rule_Equals_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Rule.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_Rule_GetHashCode" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_Name" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_Priority" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.ReevaluationBehavior">
      <topicdata group="api" />
      <apidata name="ReevaluationBehavior" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_ReevaluationBehavior" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Rule.ThenActions">
      <topicdata group="api" />
      <apidata name="ThenActions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Rule_ThenActions" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleAction" />
      <apidata name="RuleAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleAction">
      <topicdata name="RuleAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleAction" />
      <apidata name="RuleAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleAction" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleAction">
      <topicdata name="RuleAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleAction" />
      <apidata name="RuleAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleAction" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAction.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleAction_Clone" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleAction_Execute_1_ec713a43" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="GetSideEffects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleAction_GetSideEffects_1_851b3657" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="validator">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleAction_Validate_1_851b3657" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleActionTrackingEvent" />
      <apidata name="RuleActionTrackingEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleActionTrackingEvent" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleActionTrackingEvent">
      <topicdata name="RuleActionTrackingEvent" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent" />
      <apidata name="RuleActionTrackingEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.ConditionResult" />
        <element api="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.RuleName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleActionTrackingEvent" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleActionTrackingEvent">
      <topicdata name="RuleActionTrackingEvent" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent" />
      <apidata name="RuleActionTrackingEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.ConditionResult" />
        <element api="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.RuleName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleActionTrackingEvent" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.ConditionResult">
      <topicdata group="api" />
      <apidata name="ConditionResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleActionTrackingEvent_ConditionResult" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.RuleName">
      <topicdata group="api" />
      <apidata name="RuleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleActionTrackingEvent_RuleName" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleAnalysis">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleAnalysis" />
      <apidata name="RuleAnalysis" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleAnalysis" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleAnalysis">
      <topicdata name="RuleAnalysis" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleAnalysis" />
      <apidata name="RuleAnalysis" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" />
        <element api="M:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)" />
        <element api="P:System.Workflow.Activities.Rules.RuleAnalysis.ForWrites" />
        <element api="M:System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleAnalysis" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleAnalysis">
      <topicdata name="RuleAnalysis" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleAnalysis" />
      <apidata name="RuleAnalysis" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleAnalysis" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleAnalysis">
      <topicdata name="RuleAnalysis" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleAnalysis" />
      <apidata name="RuleAnalysis" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleAnalysis.ForWrites" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleAnalysis" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
        <parameter name="forWrites">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAnalysis" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleAnalysis_ctor_2_84c471c3" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)">
      <topicdata group="api" />
      <apidata name="AddSymbol" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="symbol">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAnalysis" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleAnalysis_AddSymbol_1_72eac341" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleAnalysis.ForWrites">
      <topicdata group="api" />
      <apidata name="ForWrites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAnalysis" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleAnalysis_ForWrites" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols">
      <topicdata group="api" />
      <apidata name="GetSymbols" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAnalysis" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleAnalysis_GetSymbols" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleAttribute" />
      <apidata name="RuleAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleAttribute">
      <topicdata name="RuleAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleAttribute" />
      <apidata name="RuleAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleAttribute" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleAttribute_ctor" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleAttributeTarget">
      <topicdata group="api" />
      <apidata name="RuleAttributeTarget" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.Rules.RuleAttributeTarget.Parameter" />
        <element api="F:System.Workflow.Activities.Rules.RuleAttributeTarget.This" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleAttributeTarget" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleAttributeTarget.Parameter">
      <topicdata group="api" notopic="" />
      <apidata name="Parameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleAttributeTarget_Parameter" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleAttributeTarget.This">
      <topicdata group="api" notopic="" />
      <apidata name="This" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleAttributeTarget_This" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleChainingBehavior">
      <topicdata group="api" />
      <apidata name="RuleChainingBehavior" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.Rules.RuleChainingBehavior.None" />
        <element api="F:System.Workflow.Activities.Rules.RuleChainingBehavior.UpdateOnly" />
        <element api="F:System.Workflow.Activities.Rules.RuleChainingBehavior.Full" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleChainingBehavior" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleChainingBehavior.Full">
      <topicdata group="api" notopic="" />
      <apidata name="Full" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleChainingBehavior" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleChainingBehavior" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleChainingBehavior_Full" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleChainingBehavior.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleChainingBehavior" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleChainingBehavior" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleChainingBehavior_None" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleChainingBehavior.UpdateOnly">
      <topicdata group="api" notopic="" />
      <apidata name="UpdateOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleChainingBehavior" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleChainingBehavior" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleChainingBehavior_UpdateOnly" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleCondition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleCondition" />
      <apidata name="RuleCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleCondition" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleCondition">
      <topicdata name="RuleCondition" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleCondition" />
      <apidata name="RuleCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="P:System.Workflow.Activities.Rules.RuleCondition.Name" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.OnRuntimeInitialized" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleCondition" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleCondition">
      <topicdata name="RuleCondition" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleCondition" />
      <apidata name="RuleCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.OnRuntimeInitialized" />
        <element api="M:System.Workflow.Activities.Rules.RuleCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleCondition" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleCondition">
      <topicdata name="RuleCondition" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleCondition" />
      <apidata name="RuleCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleCondition.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleCondition" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleCondition_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleCondition.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleCondition_Clone" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="execution">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleCondition_Evaluate_1_ec713a43" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="GetDependencies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleCondition_GetDependencies_1_851b3657" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleCondition.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleCondition_Name" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleCondition.OnRuntimeInitialized">
      <topicdata group="api" />
      <apidata name="OnRuntimeInitialized" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleCondition_OnRuntimeInitialized" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleCondition_Validate_1_851b3657" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleConditionChangeAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionChangeAction" />
      <apidata name="RuleConditionChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.AddedConditionAction" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RemovedConditionAction" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.UpdatedConditionAction" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_Rules_RuleConditionChangeAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionChangeAction">
      <topicdata name="RuleConditionChangeAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" />
      <apidata name="RuleConditionChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.#ctor" />
        <element api="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleConditionChangeAction" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleConditionChangeAction">
      <topicdata name="RuleConditionChangeAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" />
      <apidata name="RuleConditionChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleConditionChangeAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleConditionChangeAction">
      <topicdata name="RuleConditionChangeAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" />
      <apidata name="RuleConditionChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleConditionChangeAction" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleConditionChangeAction_ctor" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName">
      <topicdata group="api" />
      <apidata name="ConditionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleConditionChangeAction_ConditionName" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="ValidateChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleConditionChangeAction_ValidateChanges_1_61ac0a98" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleConditionCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionCollection" />
      <apidata name="RuleConditionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IWorkflowChangeDiff" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleConditionCollection" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionCollection">
      <topicdata name="RuleConditionCollection" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionCollection" />
      <apidata name="RuleConditionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleConditionCollection.Item">
          <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
          <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        </element>
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionCollection.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleConditionCollection" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleConditionCollection">
      <topicdata name="RuleConditionCollection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionCollection" />
      <apidata name="RuleConditionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleConditionCollection" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleConditionCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionCollection" allInherited="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleConditionCollection_Item" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionCollection" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleConditionCollection_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionCollection" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleConditionCollection_Add_1_2dc18573" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Diff" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="originalDefinition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="changedDefinition">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IWorkflowChangeDiff.Diff(System.Object,System.Object)">
          <type api="T:System.Workflow.ComponentModel.IWorkflowChangeDiff" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionCollection" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleConditionCollection_Diff_2_3fcf08df" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleConditionReference">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionReference" />
      <apidata name="RuleConditionReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleConditionReference" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionReference">
      <topicdata name="RuleConditionReference" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionReference" />
      <apidata name="RuleConditionReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionReference.#ctor" />
        <element api="P:System.Workflow.Activities.Rules.RuleConditionReference.ConditionName" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionReference.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionReference.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleConditionReference.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleConditionReference" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleConditionReference">
      <topicdata name="RuleConditionReference" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionReference" />
      <apidata name="RuleConditionReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionReference.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionReference.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleConditionReference.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleConditionReference" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleConditionReference">
      <topicdata name="RuleConditionReference" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleConditionReference" />
      <apidata name="RuleConditionReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleConditionReference.ConditionName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleConditionReference" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleConditionReference.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleConditionReference" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionReference" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleConditionReference_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionReference.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionReference" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleConditionReference_ctor" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleConditionReference.ConditionName">
      <topicdata group="api" />
      <apidata name="ConditionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionReference" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleConditionReference_ConditionName" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionReference.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionReference" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleConditionReference_Evaluate_2_065a00af" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleConditionReference.InitializeProperties">
      <topicdata group="api" />
      <apidata name="InitializeProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleConditionReference" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleConditionReference_InitializeProperties" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleDefinitions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleDefinitions" />
      <apidata name="RuleDefinitions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IWorkflowChangeDiff" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleDefinitions" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleDefinitions">
      <topicdata name="RuleDefinitions" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleDefinitions" />
      <apidata name="RuleDefinitions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleDefinitions.#ctor" />
        <element api="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions" />
        <element api="M:System.Workflow.Activities.Rules.RuleDefinitions.Diff(System.Object,System.Object)" />
        <element api="F:System.Workflow.Activities.Rules.RuleDefinitions.RuleDefinitionsProperty" />
        <element api="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleDefinitions" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleDefinitions">
      <topicdata name="RuleDefinitions" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleDefinitions" />
      <apidata name="RuleDefinitions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleDefinitions.Diff(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleDefinitions" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleDefinitions">
      <topicdata name="RuleDefinitions" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleDefinitions" />
      <apidata name="RuleDefinitions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions" />
        <element api="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleDefinitions" />
    </api>
    <api id="Fields.T:System.Workflow.Activities.Rules.RuleDefinitions">
      <topicdata name="RuleDefinitions" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.Activities.Rules.RuleDefinitions" />
      <apidata name="RuleDefinitions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.Rules.RuleDefinitions.RuleDefinitionsProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Fields_T_System_Workflow_Activities_Rules_RuleDefinitions" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleDefinitions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleDefinitions" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleDefinitions_ctor" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions">
      <topicdata group="api" />
      <apidata name="Conditions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleConditionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleDefinitions" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleDefinitions_Conditions" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleDefinitions.Diff(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Diff" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="originalDefinition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="changedDefinition">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IWorkflowChangeDiff.Diff(System.Object,System.Object)">
          <type api="T:System.Workflow.ComponentModel.IWorkflowChangeDiff" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleDefinitions" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleDefinitions_Diff_2_3fcf08df" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleDefinitions.RuleDefinitionsProperty">
      <topicdata group="api" />
      <apidata name="RuleDefinitionsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleDefinitions" ref="true" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleDefinitions_RuleDefinitionsProperty" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets">
      <topicdata group="api" />
      <apidata name="RuleSets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSetCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleDefinitions" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleDefinitions_RuleSets" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleEngine">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleEngine" />
      <apidata name="RuleEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleEngine" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleEngine">
      <topicdata name="RuleEngine" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleEngine" />
      <apidata name="RuleEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleEngine.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Type)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleValidation)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.RuleEngine.Execute">
          <element api="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleEngine" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleEngine">
      <topicdata name="RuleEngine" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleEngine" />
      <apidata name="RuleEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleEngine.Execute">
          <element api="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleEngine" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleEngine.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleEngine" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Type)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEngine" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleEngine_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleEngine.Execute">
      <topicdata name="Execute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleEngine" />
      <apidata name="Execute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEngine" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleEngine_Execute" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEngine.#ctor" />
      <parameters>
        <parameter name="ruleSet">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEngine" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEngine_ctor_2_0ea0567a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEngine.#ctor" />
      <parameters>
        <parameter name="ruleSet">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEngine" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEngine_ctor_2_7349febc" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.Rules.RuleEngine.Execute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thisObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEngine" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleEngine_Execute_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.Activities.Rules.RuleEngine.Execute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thisObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEngine" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleEngine_Execute_2_bc8c341f" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleEvaluationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleEvaluationException" />
      <apidata name="RuleEvaluationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleEvaluationException" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleEvaluationException">
      <topicdata name="RuleEvaluationException" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleEvaluationException" />
      <apidata name="RuleEvaluationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleEvaluationException" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleEvaluationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationException" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleEvaluationException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor" />
      <parameters>
        <parameter name="serializeInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />
      <apidata name="RuleEvaluationIncompatibleTypesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
      <topicdata name="RuleEvaluationIncompatibleTypesException" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />
      <apidata name="RuleEvaluationIncompatibleTypesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type)" />
          <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Exception)" />
        </element>
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left" />
        <element api="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator" />
        <element api="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
      <topicdata name="RuleEvaluationIncompatibleTypesException" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />
      <apidata name="RuleEvaluationIncompatibleTypesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
      <topicdata name="RuleEvaluationIncompatibleTypesException" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />
      <apidata name="RuleEvaluationIncompatibleTypesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left" />
        <element api="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator" />
        <element api="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type)" />
        <element api="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <parameters>
        <parameter name="serializeInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="op">
          <type api="T:System.CodeDom.CodeBinaryOperatorType" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_ctor_4_9b0e2665" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="op">
          <type api="T:System.CodeDom.CodeBinaryOperatorType" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_ctor_5_832a784c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_Left" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator">
      <topicdata group="api" />
      <apidata name="Operator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.CodeDom.CodeBinaryOperatorType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_Operator" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleEvaluationIncompatibleTypesException_Right" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleException" />
      <apidata name="RuleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.RuleEvaluationException" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleException" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleException">
      <topicdata name="RuleException" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleException" />
      <apidata name="RuleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleException.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleException" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleException.#ctor" />
      <parameters>
        <parameter name="serializeInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleException_ctor_2_3ec47892" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleExecution">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleExecution" />
      <apidata name="RuleExecution" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleExecution" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleExecution">
      <topicdata name="RuleExecution" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleExecution" />
      <apidata name="RuleExecution" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleExecution.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)" />
          <element api="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.Activity" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.ActivityExecutionContext" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.Halted" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.ThisObject" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.Validation" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleExecution" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleExecution">
      <topicdata name="RuleExecution" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleExecution" />
      <apidata name="RuleExecution" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.Activity" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.ActivityExecutionContext" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.Halted" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.ThisObject" />
        <element api="P:System.Workflow.Activities.Rules.RuleExecution.Validation" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleExecution" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleExecution.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleExecution" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleExecution_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleExecution.#ctor" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
        <parameter name="thisObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExecution_ctor_2_a2ada9de" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleExecution.#ctor" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
        <parameter name="thisObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="activityExecutionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExecution_ctor_3_992b6f04" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExecution.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExecution_Activity" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExecution.ActivityExecutionContext">
      <topicdata group="api" />
      <apidata name="ActivityExecutionContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExecution_ActivityExecutionContext" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExecution.Halted">
      <topicdata group="api" />
      <apidata name="Halted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExecution_Halted" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExecution.ThisObject">
      <topicdata group="api" />
      <apidata name="ThisObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExecution_ThisObject" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExecution.Validation">
      <topicdata group="api" />
      <apidata name="Validation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExecution_Validation" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleExpressionCondition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionCondition" />
      <apidata name="RuleExpressionCondition" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleExpressionCondition" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionCondition">
      <topicdata name="RuleExpressionCondition" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />
      <apidata name="RuleExpressionCondition" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)" />
          <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)" />
        </element>
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Expression" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode" />
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Name" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleExpressionCondition" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleExpressionCondition">
      <topicdata name="RuleExpressionCondition" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />
      <apidata name="RuleExpressionCondition" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleExpressionCondition" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleExpressionCondition">
      <topicdata name="RuleExpressionCondition" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionCondition" />
      <apidata name="RuleExpressionCondition" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Expression" />
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Name" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleExpressionCondition" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionCondition" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleExpressionCondition_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExpressionCondition_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExpressionCondition_ctor_1_80197971" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor" />
      <parameters>
        <parameter name="conditionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExpressionCondition_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor" />
      <parameters>
        <parameter name="conditionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExpressionCondition_ctor_2_83a308bc" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleCondition.Clone">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_Clone" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_Equals_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="execution">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_Evaluate_1_ec713a43" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.CodeDom.CodeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExpressionCondition_Expression" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="GetDependencies" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_GetDependencies_1_851b3657" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_GetHashCode" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleCondition.Name">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExpressionCondition_Name" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized">
      <topicdata group="api" />
      <apidata name="OnRuntimeInitialized" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleCondition.OnRuntimeInitialized">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_OnRuntimeInitialized" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_ToString" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionCondition" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionCondition_Validate_1_851b3657" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleExpressionInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionInfo" />
      <apidata name="RuleExpressionInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleExpressionInfo" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionInfo">
      <topicdata name="RuleExpressionInfo" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />
      <apidata name="RuleExpressionInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)" />
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleExpressionInfo" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleExpressionInfo">
      <topicdata name="RuleExpressionInfo" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />
      <apidata name="RuleExpressionInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleExpressionInfo" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="expressionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionInfo" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExpressionInfo_ctor_1_90c95d47" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType">
      <topicdata group="api" />
      <apidata name="ExpressionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionInfo" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExpressionInfo_ExpressionType" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleExpressionResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionResult" />
      <apidata name="RuleExpressionResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.RuleLiteralResult" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleExpressionResult" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionResult">
      <topicdata name="RuleExpressionResult" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionResult" />
      <apidata name="RuleExpressionResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionResult.#ctor" />
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionResult.Value" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleExpressionResult" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleExpressionResult">
      <topicdata name="RuleExpressionResult" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionResult" />
      <apidata name="RuleExpressionResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleExpressionResult.Value" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleExpressionResult" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionResult.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionResult" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleExpressionResult_ctor" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleExpressionResult.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionResult" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleExpressionResult_Value" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleExpressionWalker">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionWalker" />
      <apidata name="RuleExpressionWalker" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleExpressionWalker" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleExpressionWalker">
      <topicdata name="RuleExpressionWalker" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionWalker" />
      <apidata name="RuleExpressionWalker" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleExpressionWalker" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleExpressionWalker">
      <topicdata name="RuleExpressionWalker" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleExpressionWalker" />
      <apidata name="RuleExpressionWalker" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleExpressionWalker" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
      <topicdata group="api" />
      <apidata name="AnalyzeUsage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="analysis">
          <type api="T:System.Workflow.Activities.Rules.RuleAnalysis" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
        <parameter name="isRead">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isWritten">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="qualifier">
          <type api="T:System.Workflow.Activities.Rules.RulePathQualifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionWalker" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionWalker_AnalyzeUsage_5_fd244b80" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="originalExpression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.CodeDom.CodeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionWalker" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionWalker_Clone_1_4370aeb9" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="Decompile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringBuilder">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
        <parameter name="parentExpression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionWalker" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionWalker_Decompile_3_07ade073" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="execution">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionWalker" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionWalker_Evaluate_2_893db076" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="firstExpression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
        <parameter name="secondExpression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionWalker" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionWalker_Match_2_87126621" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
        <parameter name="isWritten">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionWalker" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleExpressionWalker_Validate_3_15db3865" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleHaltAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleHaltAction" />
      <apidata name="RuleHaltAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleHaltAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleHaltAction">
      <topicdata name="RuleHaltAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleHaltAction" />
      <apidata name="RuleHaltAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleHaltAction" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleHaltAction">
      <topicdata name="RuleHaltAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleHaltAction" />
      <apidata name="RuleHaltAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleHaltAction" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleHaltAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Clone">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleHaltAction_Clone" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleHaltAction_Equals_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleHaltAction_Execute_1_ec713a43" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleHaltAction_GetHashCode" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="GetSideEffects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleHaltAction_GetSideEffects_1_851b3657" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleHaltAction_ToString" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validator">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleHaltAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleHaltAction_Validate_1_851b3657" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleInvokeAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleInvokeAttribute" />
      <apidata name="RuleInvokeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_Rules_RuleInvokeAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleInvokeAttribute">
      <topicdata name="RuleInvokeAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" />
      <apidata name="RuleInvokeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)" />
        <element api="P:System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleInvokeAttribute" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleInvokeAttribute">
      <topicdata name="RuleInvokeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" />
      <apidata name="RuleInvokeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleInvokeAttribute" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="methodInvoked">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleInvokeAttribute_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked">
      <topicdata group="api" />
      <apidata name="MethodInvoked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleInvokeAttribute_MethodInvoked" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleLiteralResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleLiteralResult" />
      <apidata name="RuleLiteralResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleExpressionResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleLiteralResult" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleLiteralResult">
      <topicdata name="RuleLiteralResult" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleLiteralResult" />
      <apidata name="RuleLiteralResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleLiteralResult.#ctor(System.Object)" />
        <element api="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleLiteralResult" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleLiteralResult">
      <topicdata name="RuleLiteralResult" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleLiteralResult" />
      <apidata name="RuleLiteralResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleLiteralResult" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleLiteralResult.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="literal">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleLiteralResult" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleLiteralResult_ctor_1_286e8133" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleExpressionResult.Value">
          <type api="T:System.Workflow.Activities.Rules.RuleExpressionResult" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleLiteralResult" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleLiteralResult_Value" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RulePathQualifier">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RulePathQualifier" />
      <apidata name="RulePathQualifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RulePathQualifier" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RulePathQualifier">
      <topicdata name="RulePathQualifier" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RulePathQualifier" />
      <apidata name="RulePathQualifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RulePathQualifier.#ctor(System.String,System.Workflow.Activities.Rules.RulePathQualifier)" />
        <element api="P:System.Workflow.Activities.Rules.RulePathQualifier.Name" />
        <element api="P:System.Workflow.Activities.Rules.RulePathQualifier.Next" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RulePathQualifier" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RulePathQualifier">
      <topicdata name="RulePathQualifier" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RulePathQualifier" />
      <apidata name="RulePathQualifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RulePathQualifier.Name" />
        <element api="P:System.Workflow.Activities.Rules.RulePathQualifier.Next" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RulePathQualifier" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RulePathQualifier.#ctor(System.String,System.Workflow.Activities.Rules.RulePathQualifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="next">
          <type api="T:System.Workflow.Activities.Rules.RulePathQualifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RulePathQualifier" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RulePathQualifier_ctor_2_2f630124" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RulePathQualifier.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RulePathQualifier" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RulePathQualifier_Name" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RulePathQualifier.Next">
      <topicdata group="api" />
      <apidata name="Next" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RulePathQualifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RulePathQualifier" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RulePathQualifier_Next" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleReadAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleReadAttribute" />
      <apidata name="RuleReadAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_Rules_RuleReadAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleReadAttribute">
      <topicdata name="RuleReadAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleReadAttribute" />
      <apidata name="RuleReadAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path" />
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleReadAttribute" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleReadAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReadAttribute" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleReadAttribute_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReadAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleReadAttribute_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReadAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleReadAttribute_ctor_2_091e2e17" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" />
      <apidata name="RuleReadWriteAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.RuleReadAttribute" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleWriteAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleReadWriteAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleReadWriteAttribute">
      <topicdata name="RuleReadWriteAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" />
      <apidata name="RuleReadWriteAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleReadWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)" />
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path" />
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleReadWriteAttribute" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleReadWriteAttribute">
      <topicdata name="RuleReadWriteAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" />
      <apidata name="RuleReadWriteAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path" />
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleReadWriteAttribute" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleReadWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleReadWriteAttribute_ctor_2_091e2e17" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleReadWriteAttribute_Path" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleReadWriteAttribute_Target" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior">
      <topicdata group="api" />
      <apidata name="RuleReevaluationBehavior" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Never" />
        <element api="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Always" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleReevaluationBehavior" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleReevaluationBehavior_Always" />
    </api>
    <api id="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" ref="false" />
      </containers>
      <file name="F_System_Workflow_Activities_Rules_RuleReevaluationBehavior_Never" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleSet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSet" />
      <apidata name="RuleSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleSet" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleSet">
      <topicdata name="RuleSet" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleSet" />
      <apidata name="RuleSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleSet.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleSet.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RuleSet.ChainingBehavior" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Clone" />
        <element api="P:System.Workflow.Activities.Rules.RuleSet.Description" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.GetHashCode" />
        <element api="P:System.Workflow.Activities.Rules.RuleSet.Name" />
        <element api="P:System.Workflow.Activities.Rules.RuleSet.Rules" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleSet" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleSet">
      <topicdata name="RuleSet" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleSet" />
      <apidata name="RuleSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleSet" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleSet">
      <topicdata name="RuleSet" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleSet" />
      <apidata name="RuleSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleSet.ChainingBehavior" />
        <element api="P:System.Workflow.Activities.Rules.RuleSet.Description" />
        <element api="P:System.Workflow.Activities.Rules.RuleSet.Name" />
        <element api="P:System.Workflow.Activities.Rules.RuleSet.Rules" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleSet" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleSet.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSet" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleSet.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleSet_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSet.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSet_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSet.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSet_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSet.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSet_ctor_2_6608d038" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleSet.ChainingBehavior">
      <topicdata group="api" />
      <apidata name="ChainingBehavior" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleChainingBehavior" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleSet_ChainingBehavior" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSet_Clone" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleSet.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleSet_Description" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSet_Equals_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ruleExecution">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSet_Execute_1_ec713a43" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSet_GetHashCode" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleSet.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleSet_Name" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleSet.Rules">
      <topicdata group="api" />
      <apidata name="Rules" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.Activities.Rules.Rule" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleSet_Rules" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSet.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSet_Validate_1_851b3657" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleSetChangeAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetChangeAction" />
      <apidata name="RuleSetChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.AddedRuleSetAction" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_Rules_RuleSetChangeAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleSetChangeAction">
      <topicdata name="RuleSetChangeAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetChangeAction" />
      <apidata name="RuleSetChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetChangeAction.#ctor" />
        <element api="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleSetChangeAction" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleSetChangeAction">
      <topicdata name="RuleSetChangeAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetChangeAction" />
      <apidata name="RuleSetChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleSetChangeAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleSetChangeAction">
      <topicdata name="RuleSetChangeAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetChangeAction" />
      <apidata name="RuleSetChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleSetChangeAction" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetChangeAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetChangeAction_ctor" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName">
      <topicdata group="api" />
      <apidata name="RuleSetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleSetChangeAction_RuleSetName" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="ValidateChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSetChangeAction_ValidateChanges_1_61ac0a98" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleSetCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetCollection" />
      <apidata name="RuleSetCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IWorkflowChangeDiff" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleSetCollection" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleSetCollection">
      <topicdata name="RuleSetCollection" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetCollection" />
      <apidata name="RuleSetCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleSetCollection.Item">
          <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
          <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        </element>
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{`0}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetCollection.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetCollection.Add(System.Workflow.Activities.Rules.RuleSet)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetCollection.Diff(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleSetCollection" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleSetCollection">
      <topicdata name="RuleSetCollection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetCollection" />
      <apidata name="RuleSetCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element signatureset="" api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetCollection.Add(System.Workflow.Activities.Rules.RuleSet)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetCollection.Diff(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleSetCollection" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleSetCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetCollection" allInherited="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetCollection" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleSetCollection_Item" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetCollection" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetCollection_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetCollection.Add(System.Workflow.Activities.Rules.RuleSet)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetCollection" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSetCollection_Add_1_746b2621" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetCollection.Diff(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Diff" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="originalDefinition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="changedDefinition">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IWorkflowChangeDiff.Diff(System.Object,System.Object)">
          <type api="T:System.Workflow.ComponentModel.IWorkflowChangeDiff" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetCollection" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleSetCollection_Diff_2_3fcf08df" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleSetReference">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetReference" />
      <apidata name="RuleSetReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_Rules_RuleSetReference" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleSetReference">
      <topicdata name="RuleSetReference" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetReference" />
      <apidata name="RuleSetReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleSetReference.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RuleSetReference.RuleSetName" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleSetReference.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleSetReference" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleSetReference">
      <topicdata name="RuleSetReference" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetReference" />
      <apidata name="RuleSetReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleSetReference.RuleSetName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.Site" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleSetReference" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleSetReference.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetReference" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetReference" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleSetReference_ctor" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleSetReference.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetReference" allInherited="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetReference" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleSetReference_Dispose" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSetReference.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetReference" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetReference_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSetReference.#ctor" />
      <parameters>
        <parameter name="ruleSetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetReference" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetReference_ctor_1_61b4e77c" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleSetReference.RuleSetName">
      <topicdata group="api" />
      <apidata name="RuleSetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetReference" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleSetReference_RuleSetName" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleSetValidationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetValidationException" />
      <apidata name="RuleSetValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleSetValidationException" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleSetValidationException">
      <topicdata name="RuleSetValidationException" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetValidationException" />
      <apidata name="RuleSetValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RuleSetValidationException.Errors" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleSetValidationException" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleSetValidationException">
      <topicdata name="RuleSetValidationException" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetValidationException" />
      <apidata name="RuleSetValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleSetValidationException" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleSetValidationException">
      <topicdata name="RuleSetValidationException" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleSetValidationException" />
      <apidata name="RuleSetValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Workflow.Activities.Rules.RuleSetValidationException.Errors" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleSetValidationException" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleSetValidationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleSetValidationException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetValidationException_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor" />
      <parameters>
        <parameter name="serializeInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetValidationException_ctor_2_4075724f" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetValidationException_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetValidationException_ctor_2_3ec47892" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errors">
          <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleSetValidationException_ctor_2_3dac1204" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleSetValidationException.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleSetValidationException_Errors" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleSetValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleSetValidationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Workflow_Activities_Rules_RuleSetValidationException_GetObjectData_2_af75a6ab" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleStatementAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleStatementAction" />
      <apidata name="RuleStatementAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleStatementAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleStatementAction">
      <topicdata name="RuleStatementAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleStatementAction" />
      <apidata name="RuleStatementAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleStatementAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeExpression)" />
          <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeStatement)" />
        </element>
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Clone" />
        <element api="P:System.Workflow.Activities.Rules.RuleStatementAction.CodeDomStatement" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleStatementAction" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleStatementAction">
      <topicdata name="RuleStatementAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleStatementAction" />
      <apidata name="RuleStatementAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleStatementAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleStatementAction">
      <topicdata name="RuleStatementAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleStatementAction" />
      <apidata name="RuleStatementAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleStatementAction.CodeDomStatement" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleStatementAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleStatementAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleStatementAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeStatement)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleStatementAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleStatementAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleStatementAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleStatementAction.#ctor" />
      <parameters>
        <parameter name="codeDomExpression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleStatementAction_ctor_1_80197971" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeStatement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleStatementAction.#ctor" />
      <parameters>
        <parameter name="codeDomStatement">
          <type api="T:System.CodeDom.CodeStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleStatementAction_ctor_1_88b62f28" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Clone">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleStatementAction_Clone" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleStatementAction.CodeDomStatement">
      <topicdata group="api" />
      <apidata name="CodeDomStatement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.CodeDom.CodeStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleStatementAction_CodeDomStatement" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleStatementAction_Equals_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleStatementAction_Execute_1_ec713a43" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleStatementAction_GetHashCode" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="GetSideEffects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleStatementAction_GetSideEffects_1_851b3657" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleStatementAction_ToString" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleStatementAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validator">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleStatementAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleStatementAction_Validate_1_851b3657" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleUpdateAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleUpdateAction" />
      <apidata name="RuleUpdateAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleUpdateAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleUpdateAction">
      <topicdata name="RuleUpdateAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleUpdateAction" />
      <apidata name="RuleUpdateAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="P:System.Workflow.Activities.Rules.RuleUpdateAction.Path" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleUpdateAction" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleUpdateAction">
      <topicdata name="RuleUpdateAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleUpdateAction" />
      <apidata name="RuleUpdateAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Clone" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Equals(System.Object)" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetHashCode" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleUpdateAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleUpdateAction">
      <topicdata name="RuleUpdateAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleUpdateAction" />
      <apidata name="RuleUpdateAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleUpdateAction.Path" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleUpdateAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleUpdateAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleUpdateAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleUpdateAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleUpdateAction_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Clone">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleUpdateAction_Clone" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleUpdateAction_Equals_1_2572741a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Workflow.Activities.Rules.RuleExecution" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleUpdateAction_Execute_1_ec713a43" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleUpdateAction_GetHashCode" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="GetSideEffects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validation">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleUpdateAction_GetSideEffects_1_851b3657" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleUpdateAction.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleUpdateAction_Path" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleUpdateAction_ToString" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleUpdateAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
          <type api="T:System.Workflow.Activities.Rules.RuleAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="validator">
          <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleUpdateAction" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleUpdateAction_Validate_1_851b3657" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleValidation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleValidation" />
      <apidata name="RuleValidation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_RuleValidation" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleValidation">
      <topicdata name="RuleValidation" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleValidation" />
      <apidata name="RuleValidation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleValidation.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)" />
          <element api="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Boolean)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.RuleValidation.Errors" />
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.ExpressionInfo(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.PopParentExpression" />
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.PushParentExpression(System.CodeDom.CodeExpression)" />
        <element api="P:System.Workflow.Activities.Rules.RuleValidation.ThisType" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleValidation" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.RuleValidation">
      <topicdata name="RuleValidation" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.RuleValidation" />
      <apidata name="RuleValidation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.ExpressionInfo(System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.PopParentExpression" />
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.PushParentExpression(System.CodeDom.CodeExpression)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_RuleValidation" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.RuleValidation">
      <topicdata name="RuleValidation" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.RuleValidation" />
      <apidata name="RuleValidation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.RuleValidation.Errors" />
        <element api="P:System.Workflow.Activities.Rules.RuleValidation.ThisType" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_RuleValidation" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleValidation.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleValidation" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)" />
        <element api="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleValidation_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleValidation.#ctor" />
      <parameters>
        <parameter name="thisType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="typeProvider">
          <type api="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleValidation_ctor_2_a825c28a" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleValidation.#ctor" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="typeProvider">
          <type api="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" ref="true" />
        </parameter>
        <parameter name="checkStaticType">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleValidation_ctor_3_ef6b8358" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleValidation.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleValidation_Errors" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleValidation.ExpressionInfo(System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="ExpressionInfo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleExpressionInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleValidation_ExpressionInfo_1_4370aeb9" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleValidation.PopParentExpression">
      <topicdata group="api" />
      <apidata name="PopParentExpression" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleValidation_PopParentExpression" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleValidation.PushParentExpression(System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name="PushParentExpression" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_RuleValidation_PushParentExpression_1_4370aeb9" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.RuleValidation.ThisType">
      <topicdata group="api" />
      <apidata name="ThisType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleValidation" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_RuleValidation_ThisType" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.RuleWriteAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleWriteAttribute" />
      <apidata name="RuleWriteAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="T_System_Workflow_Activities_Rules_RuleWriteAttribute" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.RuleWriteAttribute">
      <topicdata name="RuleWriteAttribute" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.RuleWriteAttribute" />
      <apidata name="RuleWriteAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path" />
        <element api="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target" />
        <element api="Overload:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor">
          <element api="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)" />
          <element api="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_RuleWriteAttribute" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.RuleWriteAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)" />
        <element api="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleWriteAttribute" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_RuleWriteAttribute_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleWriteAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleWriteAttribute_ctor_1_61b4e77c" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Workflow.Activities.Rules.RuleAttributeTarget" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.RuleWriteAttribute" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_RuleWriteAttribute_ctor_2_091e2e17" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.UpdatedConditionAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.UpdatedConditionAction" />
      <apidata name="UpdatedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_UpdatedConditionAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.UpdatedConditionAction">
      <topicdata name="UpdatedConditionAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.UpdatedConditionAction" />
      <apidata name="UpdatedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="Overload:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition,System.Workflow.Activities.Rules.RuleCondition)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionDefinition" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionName" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedConditionAction.NewConditionDefinition" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_UpdatedConditionAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.UpdatedConditionAction">
      <topicdata name="UpdatedConditionAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.UpdatedConditionAction" />
      <apidata name="UpdatedConditionAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionDefinition" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionName" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedConditionAction.NewConditionDefinition" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_UpdatedConditionAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.UpdatedConditionAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition,System.Workflow.Activities.Rules.RuleCondition)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedConditionAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_UpdatedConditionAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedConditionAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_UpdatedConditionAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition,System.Workflow.Activities.Rules.RuleCondition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor" />
      <parameters>
        <parameter name="conditionDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </parameter>
        <parameter name="newConditionDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedConditionAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_UpdatedConditionAction_ctor_2_3be1a5a0" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionDefinition">
      <topicdata group="api" />
      <apidata name="ConditionDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedConditionAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_UpdatedConditionAction_ConditionDefinition" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionName">
      <topicdata group="api" />
      <apidata name="ConditionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName">
          <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedConditionAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_UpdatedConditionAction_ConditionName" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.UpdatedConditionAction.NewConditionDefinition">
      <topicdata group="api" />
      <apidata name="NewConditionDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedConditionAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_UpdatedConditionAction_NewConditionDefinition" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" />
      <apidata name="UpdatedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_UpdatedRuleSetAction" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.UpdatedRuleSetAction">
      <topicdata name="UpdatedRuleSetAction" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" />
      <apidata name="UpdatedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="Overload:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor">
          <element api="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor" />
          <element api="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleSet)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.OriginalRuleSetDefinition" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.RuleSetName" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.UpdatedRuleSetDefinition" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_UpdatedRuleSetAction" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.UpdatedRuleSetAction">
      <topicdata name="UpdatedRuleSetAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" />
      <apidata name="UpdatedRuleSetAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.OriginalRuleSetDefinition" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.RuleSetName" />
        <element api="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.UpdatedRuleSetDefinition" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_UpdatedRuleSetAction" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor" />
        <element api="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleSet)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_UpdatedRuleSetAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_UpdatedRuleSetAction_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleSet)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor" />
      <parameters>
        <parameter name="originalRuleSetDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
        <parameter name="updatedRuleSetDefinition">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_UpdatedRuleSetAction_ctor_2_2c3ca9c0" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.OriginalRuleSetDefinition">
      <topicdata group="api" />
      <apidata name="OriginalRuleSetDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_UpdatedRuleSetAction_OriginalRuleSetDefinition" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.RuleSetName">
      <topicdata group="api" />
      <apidata name="RuleSetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName">
          <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_UpdatedRuleSetAction_RuleSetName" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.UpdatedRuleSetDefinition">
      <topicdata group="api" />
      <apidata name="UpdatedRuleSetDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules" />
        <type api="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_UpdatedRuleSetAction_UpdatedRuleSetDefinition" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      <apidata name="RuleConditionDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Forms.Form" ref="true" />
          <type api="T:System.Windows.Forms.ContainerControl" ref="true" />
          <type api="T:System.Windows.Forms.ScrollableControl" ref="true" />
          <type api="T:System.Windows.Forms.Control" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_Design_RuleConditionDialog" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog">
      <topicdata name="RuleConditionDialog" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      <apidata name="RuleConditionDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleFactor" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleMode" />
        <element api="P:System.Windows.Forms.ContainerControl.BindingContext" />
        <element api="P:System.Windows.Forms.ContainerControl.CanEnableIme" />
        <element api="P:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions" />
        <element api="M:System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)" />
        <element api="P:System.Windows.Forms.ContainerControl.ParentForm" />
        <element api="M:System.Windows.Forms.ContainerControl.PerformAutoScale" />
        <element api="M:System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Validate">
          <element api="M:System.Windows.Forms.ContainerControl.Validate" />
          <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="M:System.Windows.Forms.Control.ResetBackColor" />
        <element api="M:System.Windows.Forms.Control.ResetBindings" />
        <element api="M:System.Windows.Forms.Control.ResetCursor" />
        <element api="M:System.Windows.Forms.Control.ResetFont" />
        <element api="M:System.Windows.Forms.Control.ResetForeColor" />
        <element api="M:System.Windows.Forms.Control.ResetImeMode" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetRightToLeft" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Scale">
          <element api="M:System.Windows.Forms.Control.Scale(System.Single)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
        </element>
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Show">
          <element api="M:System.Windows.Forms.Control.Show" />
          <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Control.WindowTarget" />
        <element api="P:System.Windows.Forms.Form.AcceptButton" />
        <element api="M:System.Windows.Forms.Form.Activate" />
        <element api="E:System.Windows.Forms.Form.Activated" />
        <element api="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
        <element api="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <element api="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
        <element api="P:System.Windows.Forms.Form.AllowTransparency" />
        <element api="M:System.Windows.Forms.Form.ApplyAutoScaling" />
        <element api="P:System.Windows.Forms.Form.AutoScale" />
        <element api="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
        <element api="P:System.Windows.Forms.Form.AutoScroll" />
        <element api="P:System.Windows.Forms.Form.AutoSize" />
        <element api="E:System.Windows.Forms.Form.AutoSizeChanged" />
        <element api="P:System.Windows.Forms.Form.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Form.AutoValidate" />
        <element api="E:System.Windows.Forms.Form.AutoValidateChanged" />
        <element api="P:System.Windows.Forms.Form.BackColor" />
        <element api="P:System.Windows.Forms.Form.CancelButton" />
        <element api="M:System.Windows.Forms.Form.CenterToParent" />
        <element api="M:System.Windows.Forms.Form.CenterToScreen" />
        <element api="P:System.Windows.Forms.Form.ClientSize" />
        <element api="M:System.Windows.Forms.Form.Close" />
        <element api="E:System.Windows.Forms.Form.Closed" />
        <element api="E:System.Windows.Forms.Form.Closing" />
        <element api="P:System.Windows.Forms.Form.ControlBox" />
        <element api="M:System.Windows.Forms.Form.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Form.CreateHandle" />
        <element api="P:System.Windows.Forms.Form.CreateParams" />
        <element api="E:System.Windows.Forms.Form.Deactivate" />
        <element api="P:System.Windows.Forms.Form.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Form.DefaultSize" />
        <element api="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="P:System.Windows.Forms.Form.DesktopBounds" />
        <element api="P:System.Windows.Forms.Form.DesktopLocation" />
        <element api="P:System.Windows.Forms.Form.DialogResult" />
        <element api="P:System.Windows.Forms.Form.FormBorderStyle" />
        <element api="E:System.Windows.Forms.Form.FormClosed" />
        <element api="E:System.Windows.Forms.Form.FormClosing" />
        <element api="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="P:System.Windows.Forms.Form.HelpButton" />
        <element api="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <element api="P:System.Windows.Forms.Form.Icon" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <element api="P:System.Windows.Forms.Form.IsMdiChild" />
        <element api="P:System.Windows.Forms.Form.IsMdiContainer" />
        <element api="P:System.Windows.Forms.Form.IsRestrictedWindow" />
        <element api="P:System.Windows.Forms.Form.KeyPreview" />
        <element api="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <element api="E:System.Windows.Forms.Form.Load" />
        <element api="P:System.Windows.Forms.Form.Location" />
        <element api="P:System.Windows.Forms.Form.MainMenuStrip" />
        <element api="P:System.Windows.Forms.Form.Margin" />
        <element api="E:System.Windows.Forms.Form.MarginChanged" />
        <element api="P:System.Windows.Forms.Form.MaximizeBox" />
        <element api="P:System.Windows.Forms.Form.MaximizedBounds" />
        <element api="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <element api="P:System.Windows.Forms.Form.MaximumSize" />
        <element api="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <element api="E:System.Windows.Forms.Form.MdiChildActivate" />
        <element api="P:System.Windows.Forms.Form.MdiChildren" />
        <element api="P:System.Windows.Forms.Form.MdiParent" />
        <element api="P:System.Windows.Forms.Form.Menu" />
        <element api="E:System.Windows.Forms.Form.MenuComplete" />
        <element api="E:System.Windows.Forms.Form.MenuStart" />
        <element api="P:System.Windows.Forms.Form.MergedMenu" />
        <element api="P:System.Windows.Forms.Form.MinimizeBox" />
        <element api="P:System.Windows.Forms.Form.MinimumSize" />
        <element api="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <element api="P:System.Windows.Forms.Form.Modal" />
        <element api="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnCreateControl" />
        <element api="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
        <element api="P:System.Windows.Forms.Form.Opacity" />
        <element api="P:System.Windows.Forms.Form.OwnedForms" />
        <element api="P:System.Windows.Forms.Form.Owner" />
        <element api="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <element api="E:System.Windows.Forms.Form.ResizeBegin" />
        <element api="E:System.Windows.Forms.Form.ResizeEnd" />
        <element api="P:System.Windows.Forms.Form.RestoreBounds" />
        <element api="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <element api="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <element api="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
        <element api="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ShowDialog">
          <element api="M:System.Windows.Forms.Form.ShowDialog" />
          <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="P:System.Windows.Forms.Form.ShowIcon" />
        <element api="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <element api="E:System.Windows.Forms.Form.Shown" />
        <element api="P:System.Windows.Forms.Form.ShowWithoutActivation" />
        <element api="P:System.Windows.Forms.Form.Size" />
        <element api="P:System.Windows.Forms.Form.SizeGripStyle" />
        <element api="P:System.Windows.Forms.Form.StartPosition" />
        <element api="P:System.Windows.Forms.Form.TabIndex" />
        <element api="E:System.Windows.Forms.Form.TabIndexChanged" />
        <element api="P:System.Windows.Forms.Form.TabStop" />
        <element api="E:System.Windows.Forms.Form.TabStopChanged" />
        <element api="P:System.Windows.Forms.Form.Text" />
        <element api="P:System.Windows.Forms.Form.TopLevel" />
        <element api="P:System.Windows.Forms.Form.TopMost" />
        <element api="M:System.Windows.Forms.Form.ToString" />
        <element api="P:System.Windows.Forms.Form.TransparencyKey" />
        <element api="M:System.Windows.Forms.Form.UpdateDefaultButton" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ValidateChildren">
          <element api="M:System.Windows.Forms.Form.ValidateChildren" />
          <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
        </element>
        <element api="P:System.Windows.Forms.Form.WindowState" />
        <element api="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.DockPadding" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="E:System.Windows.Forms.ScrollableControl.Scroll" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor">
          <element api="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Workflow.ComponentModel.Activity,System.CodeDom.CodeExpression)" />
          <element api="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.CodeDom.CodeExpression)" />
        </element>
        <element api="P:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Expression" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog">
      <topicdata name="RuleConditionDialog" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      <apidata name="RuleConditionDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.PerformAutoScale" />
        <element api="M:System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Validate">
          <element api="M:System.Windows.Forms.ContainerControl.Validate" />
          <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.ResetBackColor" />
        <element api="M:System.Windows.Forms.Control.ResetBindings" />
        <element api="M:System.Windows.Forms.Control.ResetCursor" />
        <element api="M:System.Windows.Forms.Control.ResetFont" />
        <element api="M:System.Windows.Forms.Control.ResetForeColor" />
        <element api="M:System.Windows.Forms.Control.ResetImeMode" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetRightToLeft" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Scale">
          <element api="M:System.Windows.Forms.Control.Scale(System.Single)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Show">
          <element api="M:System.Windows.Forms.Control.Show" />
          <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.Form.Activate" />
        <element api="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.ApplyAutoScaling" />
        <element api="M:System.Windows.Forms.Form.CenterToParent" />
        <element api="M:System.Windows.Forms.Form.CenterToScreen" />
        <element api="M:System.Windows.Forms.Form.Close" />
        <element api="M:System.Windows.Forms.Form.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Form.CreateHandle" />
        <element api="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <element api="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnCreateControl" />
        <element api="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
        <element api="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ShowDialog">
          <element api="M:System.Windows.Forms.Form.ShowDialog" />
          <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="M:System.Windows.Forms.Form.ToString" />
        <element api="M:System.Windows.Forms.Form.UpdateDefaultButton" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ValidateChildren">
          <element api="M:System.Windows.Forms.Form.ValidateChildren" />
          <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
        </element>
        <element api="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog">
      <topicdata name="RuleConditionDialog" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      <apidata name="RuleConditionDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleFactor" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleMode" />
        <element api="P:System.Windows.Forms.ContainerControl.BindingContext" />
        <element api="P:System.Windows.Forms.ContainerControl.CanEnableIme" />
        <element api="P:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.ParentForm" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Control.WindowTarget" />
        <element api="P:System.Windows.Forms.Form.AcceptButton" />
        <element api="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <element api="P:System.Windows.Forms.Form.AllowTransparency" />
        <element api="P:System.Windows.Forms.Form.AutoScale" />
        <element api="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
        <element api="P:System.Windows.Forms.Form.AutoScroll" />
        <element api="P:System.Windows.Forms.Form.AutoSize" />
        <element api="P:System.Windows.Forms.Form.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Form.AutoValidate" />
        <element api="P:System.Windows.Forms.Form.BackColor" />
        <element api="P:System.Windows.Forms.Form.CancelButton" />
        <element api="P:System.Windows.Forms.Form.ClientSize" />
        <element api="P:System.Windows.Forms.Form.ControlBox" />
        <element api="P:System.Windows.Forms.Form.CreateParams" />
        <element api="P:System.Windows.Forms.Form.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Form.DefaultSize" />
        <element api="P:System.Windows.Forms.Form.DesktopBounds" />
        <element api="P:System.Windows.Forms.Form.DesktopLocation" />
        <element api="P:System.Windows.Forms.Form.DialogResult" />
        <element api="P:System.Windows.Forms.Form.FormBorderStyle" />
        <element api="P:System.Windows.Forms.Form.HelpButton" />
        <element api="P:System.Windows.Forms.Form.Icon" />
        <element api="P:System.Windows.Forms.Form.IsMdiChild" />
        <element api="P:System.Windows.Forms.Form.IsMdiContainer" />
        <element api="P:System.Windows.Forms.Form.IsRestrictedWindow" />
        <element api="P:System.Windows.Forms.Form.KeyPreview" />
        <element api="P:System.Windows.Forms.Form.Location" />
        <element api="P:System.Windows.Forms.Form.MainMenuStrip" />
        <element api="P:System.Windows.Forms.Form.Margin" />
        <element api="P:System.Windows.Forms.Form.MaximizeBox" />
        <element api="P:System.Windows.Forms.Form.MaximizedBounds" />
        <element api="P:System.Windows.Forms.Form.MaximumSize" />
        <element api="P:System.Windows.Forms.Form.MdiChildren" />
        <element api="P:System.Windows.Forms.Form.MdiParent" />
        <element api="P:System.Windows.Forms.Form.Menu" />
        <element api="P:System.Windows.Forms.Form.MergedMenu" />
        <element api="P:System.Windows.Forms.Form.MinimizeBox" />
        <element api="P:System.Windows.Forms.Form.MinimumSize" />
        <element api="P:System.Windows.Forms.Form.Modal" />
        <element api="P:System.Windows.Forms.Form.Opacity" />
        <element api="P:System.Windows.Forms.Form.OwnedForms" />
        <element api="P:System.Windows.Forms.Form.Owner" />
        <element api="P:System.Windows.Forms.Form.RestoreBounds" />
        <element api="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <element api="P:System.Windows.Forms.Form.ShowIcon" />
        <element api="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <element api="P:System.Windows.Forms.Form.ShowWithoutActivation" />
        <element api="P:System.Windows.Forms.Form.Size" />
        <element api="P:System.Windows.Forms.Form.SizeGripStyle" />
        <element api="P:System.Windows.Forms.Form.StartPosition" />
        <element api="P:System.Windows.Forms.Form.TabIndex" />
        <element api="P:System.Windows.Forms.Form.TabStop" />
        <element api="P:System.Windows.Forms.Form.Text" />
        <element api="P:System.Windows.Forms.Form.TopLevel" />
        <element api="P:System.Windows.Forms.Form.TopMost" />
        <element api="P:System.Windows.Forms.Form.TransparencyKey" />
        <element api="P:System.Windows.Forms.Form.WindowState" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.DockPadding" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
        <element api="P:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Expression" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_MemberwiseClone" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Dispose" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Validate">
      <topicdata name="Validate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="Validate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.ContainerControl.Validate" />
        <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Validate" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.AccessibilityNotifyClients">
      <topicdata name="AccessibilityNotifyClients" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="AccessibilityNotifyClients" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_AccessibilityNotifyClients" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.BeginInvoke">
      <topicdata name="BeginInvoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
        <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_BeginInvoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.GetChildAtPoint">
      <topicdata name="GetChildAtPoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="GetChildAtPoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_GetChildAtPoint" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Invalidate">
      <topicdata name="Invalidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="Invalidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Invalidate" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Invalidate" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.PerformLayout">
      <topicdata name="PerformLayout" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="PerformLayout" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.PerformLayout" />
        <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_PerformLayout" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ResumeLayout">
      <topicdata name="ResumeLayout" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="ResumeLayout" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.ResumeLayout" />
        <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_ResumeLayout" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.RtlTranslateAlignment">
      <topicdata name="RtlTranslateAlignment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="RtlTranslateAlignment" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_RtlTranslateAlignment" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Scale">
      <topicdata name="Scale" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="Scale" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Scale" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Select">
      <topicdata name="Select" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="Select" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Select" />
        <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Select" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.SetBounds">
      <topicdata name="SetBounds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="SetBounds" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_SetBounds" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Show">
      <topicdata name="Show" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="Show" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Show" />
        <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Show" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.UpdateBounds">
      <topicdata name="UpdateBounds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="UpdateBounds" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.UpdateBounds" />
        <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_UpdateBounds" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ShowDialog">
      <topicdata name="ShowDialog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="ShowDialog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Form.ShowDialog" />
        <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_ShowDialog" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ValidateChildren">
      <topicdata name="ValidateChildren" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" allInherited="true" />
      <apidata name="ValidateChildren" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Form.ValidateChildren" />
        <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_ValidateChildren" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Workflow.ComponentModel.Activity,System.CodeDom.CodeExpression)" />
        <element api="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.CodeDom.CodeExpression)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleConditionDialog_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor" />
      <parameters>
        <parameter name="activityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="typeProvider">
          <type api="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Design_RuleConditionDialog_ctor_3_59df0210" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Workflow.ComponentModel.Activity,System.CodeDom.CodeExpression)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.CodeDom.CodeExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Design_RuleConditionDialog_ctor_2_d532009d" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <type api="T:System.Windows.Forms.Form" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Dispose_1_36d384f7" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.CodeDom.CodeExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Design_RuleConditionDialog_Expression" />
    </api>
    <api id="T:System.Workflow.Activities.Rules.Design.RuleSetDialog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      <apidata name="RuleSetDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Forms.Form" ref="true" />
          <type api="T:System.Windows.Forms.ContainerControl" ref="true" />
          <type api="T:System.Windows.Forms.ScrollableControl" ref="true" />
          <type api="T:System.Windows.Forms.Control" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="T_System_Workflow_Activities_Rules_Design_RuleSetDialog" />
    </api>
    <api id="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog">
      <topicdata name="RuleSetDialog" group="list" subgroup="members" typeTopicId="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      <apidata name="RuleSetDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose(System.Boolean)" />
        </element>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleFactor" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleMode" />
        <element api="P:System.Windows.Forms.ContainerControl.BindingContext" />
        <element api="P:System.Windows.Forms.ContainerControl.CanEnableIme" />
        <element api="P:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions" />
        <element api="M:System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)" />
        <element api="P:System.Windows.Forms.ContainerControl.ParentForm" />
        <element api="M:System.Windows.Forms.ContainerControl.PerformAutoScale" />
        <element api="M:System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Validate">
          <element api="M:System.Windows.Forms.ContainerControl.Validate" />
          <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="M:System.Windows.Forms.Control.ResetBackColor" />
        <element api="M:System.Windows.Forms.Control.ResetBindings" />
        <element api="M:System.Windows.Forms.Control.ResetCursor" />
        <element api="M:System.Windows.Forms.Control.ResetFont" />
        <element api="M:System.Windows.Forms.Control.ResetForeColor" />
        <element api="M:System.Windows.Forms.Control.ResetImeMode" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetRightToLeft" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Scale">
          <element api="M:System.Windows.Forms.Control.Scale(System.Single)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
        </element>
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Show">
          <element api="M:System.Windows.Forms.Control.Show" />
          <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Control.WindowTarget" />
        <element api="P:System.Windows.Forms.Form.AcceptButton" />
        <element api="M:System.Windows.Forms.Form.Activate" />
        <element api="E:System.Windows.Forms.Form.Activated" />
        <element api="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
        <element api="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <element api="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
        <element api="P:System.Windows.Forms.Form.AllowTransparency" />
        <element api="M:System.Windows.Forms.Form.ApplyAutoScaling" />
        <element api="P:System.Windows.Forms.Form.AutoScale" />
        <element api="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
        <element api="P:System.Windows.Forms.Form.AutoScroll" />
        <element api="P:System.Windows.Forms.Form.AutoSize" />
        <element api="E:System.Windows.Forms.Form.AutoSizeChanged" />
        <element api="P:System.Windows.Forms.Form.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Form.AutoValidate" />
        <element api="E:System.Windows.Forms.Form.AutoValidateChanged" />
        <element api="P:System.Windows.Forms.Form.BackColor" />
        <element api="P:System.Windows.Forms.Form.CancelButton" />
        <element api="M:System.Windows.Forms.Form.CenterToParent" />
        <element api="M:System.Windows.Forms.Form.CenterToScreen" />
        <element api="P:System.Windows.Forms.Form.ClientSize" />
        <element api="M:System.Windows.Forms.Form.Close" />
        <element api="E:System.Windows.Forms.Form.Closed" />
        <element api="E:System.Windows.Forms.Form.Closing" />
        <element api="P:System.Windows.Forms.Form.ControlBox" />
        <element api="M:System.Windows.Forms.Form.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Form.CreateHandle" />
        <element api="P:System.Windows.Forms.Form.CreateParams" />
        <element api="E:System.Windows.Forms.Form.Deactivate" />
        <element api="P:System.Windows.Forms.Form.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Form.DefaultSize" />
        <element api="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="P:System.Windows.Forms.Form.DesktopBounds" />
        <element api="P:System.Windows.Forms.Form.DesktopLocation" />
        <element api="P:System.Windows.Forms.Form.DialogResult" />
        <element api="P:System.Windows.Forms.Form.FormBorderStyle" />
        <element api="E:System.Windows.Forms.Form.FormClosed" />
        <element api="E:System.Windows.Forms.Form.FormClosing" />
        <element api="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="P:System.Windows.Forms.Form.HelpButton" />
        <element api="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <element api="P:System.Windows.Forms.Form.Icon" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <element api="P:System.Windows.Forms.Form.IsMdiChild" />
        <element api="P:System.Windows.Forms.Form.IsMdiContainer" />
        <element api="P:System.Windows.Forms.Form.IsRestrictedWindow" />
        <element api="P:System.Windows.Forms.Form.KeyPreview" />
        <element api="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <element api="E:System.Windows.Forms.Form.Load" />
        <element api="P:System.Windows.Forms.Form.Location" />
        <element api="P:System.Windows.Forms.Form.MainMenuStrip" />
        <element api="P:System.Windows.Forms.Form.Margin" />
        <element api="E:System.Windows.Forms.Form.MarginChanged" />
        <element api="P:System.Windows.Forms.Form.MaximizeBox" />
        <element api="P:System.Windows.Forms.Form.MaximizedBounds" />
        <element api="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <element api="P:System.Windows.Forms.Form.MaximumSize" />
        <element api="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <element api="E:System.Windows.Forms.Form.MdiChildActivate" />
        <element api="P:System.Windows.Forms.Form.MdiChildren" />
        <element api="P:System.Windows.Forms.Form.MdiParent" />
        <element api="P:System.Windows.Forms.Form.Menu" />
        <element api="E:System.Windows.Forms.Form.MenuComplete" />
        <element api="E:System.Windows.Forms.Form.MenuStart" />
        <element api="P:System.Windows.Forms.Form.MergedMenu" />
        <element api="P:System.Windows.Forms.Form.MinimizeBox" />
        <element api="P:System.Windows.Forms.Form.MinimumSize" />
        <element api="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <element api="P:System.Windows.Forms.Form.Modal" />
        <element api="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnCreateControl" />
        <element api="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
        <element api="P:System.Windows.Forms.Form.Opacity" />
        <element api="P:System.Windows.Forms.Form.OwnedForms" />
        <element api="P:System.Windows.Forms.Form.Owner" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <element api="E:System.Windows.Forms.Form.ResizeBegin" />
        <element api="E:System.Windows.Forms.Form.ResizeEnd" />
        <element api="P:System.Windows.Forms.Form.RestoreBounds" />
        <element api="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <element api="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <element api="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
        <element api="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ShowDialog">
          <element api="M:System.Windows.Forms.Form.ShowDialog" />
          <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="P:System.Windows.Forms.Form.ShowIcon" />
        <element api="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <element api="E:System.Windows.Forms.Form.Shown" />
        <element api="P:System.Windows.Forms.Form.ShowWithoutActivation" />
        <element api="P:System.Windows.Forms.Form.Size" />
        <element api="P:System.Windows.Forms.Form.SizeGripStyle" />
        <element api="P:System.Windows.Forms.Form.StartPosition" />
        <element api="P:System.Windows.Forms.Form.TabIndex" />
        <element api="E:System.Windows.Forms.Form.TabIndexChanged" />
        <element api="P:System.Windows.Forms.Form.TabStop" />
        <element api="E:System.Windows.Forms.Form.TabStopChanged" />
        <element api="P:System.Windows.Forms.Form.Text" />
        <element api="P:System.Windows.Forms.Form.TopLevel" />
        <element api="P:System.Windows.Forms.Form.TopMost" />
        <element api="M:System.Windows.Forms.Form.ToString" />
        <element api="P:System.Windows.Forms.Form.TransparencyKey" />
        <element api="M:System.Windows.Forms.Form.UpdateDefaultButton" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ValidateChildren">
          <element api="M:System.Windows.Forms.Form.ValidateChildren" />
          <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
        </element>
        <element api="P:System.Windows.Forms.Form.WindowState" />
        <element api="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.DockPadding" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="E:System.Windows.Forms.ScrollableControl.Scroll" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor">
          <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.Rules.RuleSet)" />
          <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.Activities.Rules.RuleSet)" />
        </element>
        <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="P:System.Workflow.Activities.Rules.Design.RuleSetDialog.RuleSet" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="AllMembers_T_System_Workflow_Activities_Rules_Design_RuleSetDialog" />
    </api>
    <api id="Methods.T:System.Workflow.Activities.Rules.Design.RuleSetDialog">
      <topicdata name="RuleSetDialog" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      <apidata name="RuleSetDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.PerformAutoScale" />
        <element api="M:System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Validate">
          <element api="M:System.Windows.Forms.ContainerControl.Validate" />
          <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.ResetBackColor" />
        <element api="M:System.Windows.Forms.Control.ResetBindings" />
        <element api="M:System.Windows.Forms.Control.ResetCursor" />
        <element api="M:System.Windows.Forms.Control.ResetFont" />
        <element api="M:System.Windows.Forms.Control.ResetForeColor" />
        <element api="M:System.Windows.Forms.Control.ResetImeMode" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetRightToLeft" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Scale">
          <element api="M:System.Windows.Forms.Control.Scale(System.Single)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
          <element api="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
        </element>
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Show">
          <element api="M:System.Windows.Forms.Control.Show" />
          <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.Form.Activate" />
        <element api="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.ApplyAutoScaling" />
        <element api="M:System.Windows.Forms.Form.CenterToParent" />
        <element api="M:System.Windows.Forms.Form.CenterToScreen" />
        <element api="M:System.Windows.Forms.Form.Close" />
        <element api="M:System.Windows.Forms.Form.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Form.CreateHandle" />
        <element api="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <element api="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnCreateControl" />
        <element api="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
        <element api="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ShowDialog">
          <element api="M:System.Windows.Forms.Form.ShowDialog" />
          <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="M:System.Windows.Forms.Form.ToString" />
        <element api="M:System.Windows.Forms.Form.UpdateDefaultButton" />
        <element api="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ValidateChildren">
          <element api="M:System.Windows.Forms.Form.ValidateChildren" />
          <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
        </element>
        <element api="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
        <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="Methods_T_System_Workflow_Activities_Rules_Design_RuleSetDialog" />
    </api>
    <api id="Properties.T:System.Workflow.Activities.Rules.Design.RuleSetDialog">
      <topicdata name="RuleSetDialog" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      <apidata name="RuleSetDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleFactor" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleMode" />
        <element api="P:System.Windows.Forms.ContainerControl.BindingContext" />
        <element api="P:System.Windows.Forms.ContainerControl.CanEnableIme" />
        <element api="P:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.ParentForm" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Control.WindowTarget" />
        <element api="P:System.Windows.Forms.Form.AcceptButton" />
        <element api="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <element api="P:System.Windows.Forms.Form.AllowTransparency" />
        <element api="P:System.Windows.Forms.Form.AutoScale" />
        <element api="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
        <element api="P:System.Windows.Forms.Form.AutoScroll" />
        <element api="P:System.Windows.Forms.Form.AutoSize" />
        <element api="P:System.Windows.Forms.Form.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Form.AutoValidate" />
        <element api="P:System.Windows.Forms.Form.BackColor" />
        <element api="P:System.Windows.Forms.Form.CancelButton" />
        <element api="P:System.Windows.Forms.Form.ClientSize" />
        <element api="P:System.Windows.Forms.Form.ControlBox" />
        <element api="P:System.Windows.Forms.Form.CreateParams" />
        <element api="P:System.Windows.Forms.Form.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Form.DefaultSize" />
        <element api="P:System.Windows.Forms.Form.DesktopBounds" />
        <element api="P:System.Windows.Forms.Form.DesktopLocation" />
        <element api="P:System.Windows.Forms.Form.DialogResult" />
        <element api="P:System.Windows.Forms.Form.FormBorderStyle" />
        <element api="P:System.Windows.Forms.Form.HelpButton" />
        <element api="P:System.Windows.Forms.Form.Icon" />
        <element api="P:System.Windows.Forms.Form.IsMdiChild" />
        <element api="P:System.Windows.Forms.Form.IsMdiContainer" />
        <element api="P:System.Windows.Forms.Form.IsRestrictedWindow" />
        <element api="P:System.Windows.Forms.Form.KeyPreview" />
        <element api="P:System.Windows.Forms.Form.Location" />
        <element api="P:System.Windows.Forms.Form.MainMenuStrip" />
        <element api="P:System.Windows.Forms.Form.Margin" />
        <element api="P:System.Windows.Forms.Form.MaximizeBox" />
        <element api="P:System.Windows.Forms.Form.MaximizedBounds" />
        <element api="P:System.Windows.Forms.Form.MaximumSize" />
        <element api="P:System.Windows.Forms.Form.MdiChildren" />
        <element api="P:System.Windows.Forms.Form.MdiParent" />
        <element api="P:System.Windows.Forms.Form.Menu" />
        <element api="P:System.Windows.Forms.Form.MergedMenu" />
        <element api="P:System.Windows.Forms.Form.MinimizeBox" />
        <element api="P:System.Windows.Forms.Form.MinimumSize" />
        <element api="P:System.Windows.Forms.Form.Modal" />
        <element api="P:System.Windows.Forms.Form.Opacity" />
        <element api="P:System.Windows.Forms.Form.OwnedForms" />
        <element api="P:System.Windows.Forms.Form.Owner" />
        <element api="P:System.Windows.Forms.Form.RestoreBounds" />
        <element api="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <element api="P:System.Windows.Forms.Form.ShowIcon" />
        <element api="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <element api="P:System.Windows.Forms.Form.ShowWithoutActivation" />
        <element api="P:System.Windows.Forms.Form.Size" />
        <element api="P:System.Windows.Forms.Form.SizeGripStyle" />
        <element api="P:System.Windows.Forms.Form.StartPosition" />
        <element api="P:System.Windows.Forms.Form.TabIndex" />
        <element api="P:System.Windows.Forms.Form.TabStop" />
        <element api="P:System.Windows.Forms.Form.Text" />
        <element api="P:System.Windows.Forms.Form.TopLevel" />
        <element api="P:System.Windows.Forms.Form.TopMost" />
        <element api="P:System.Windows.Forms.Form.TransparencyKey" />
        <element api="P:System.Windows.Forms.Form.WindowState" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.DockPadding" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
        <element api="P:System.Workflow.Activities.Rules.Design.RuleSetDialog.RuleSet" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
      </containers>
      <file name="Properties_T_System_Workflow_Activities_Rules_Design_RuleSetDialog" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.MemberwiseClone">
      <topicdata name="MemberwiseClone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="MemberwiseClone" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_MemberwiseClone" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_Dispose" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Validate">
      <topicdata name="Validate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="Validate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.ContainerControl.Validate" />
        <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_Validate" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.AccessibilityNotifyClients">
      <topicdata name="AccessibilityNotifyClients" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="AccessibilityNotifyClients" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_AccessibilityNotifyClients" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.BeginInvoke">
      <topicdata name="BeginInvoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
        <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_BeginInvoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.GetChildAtPoint">
      <topicdata name="GetChildAtPoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="GetChildAtPoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_GetChildAtPoint" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Invalidate">
      <topicdata name="Invalidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="Invalidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Invalidate" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_Invalidate" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_Invoke" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.PerformLayout">
      <topicdata name="PerformLayout" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="PerformLayout" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.PerformLayout" />
        <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_PerformLayout" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ResumeLayout">
      <topicdata name="ResumeLayout" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="ResumeLayout" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.ResumeLayout" />
        <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_ResumeLayout" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.RtlTranslateAlignment">
      <topicdata name="RtlTranslateAlignment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="RtlTranslateAlignment" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_RtlTranslateAlignment" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Scale">
      <topicdata name="Scale" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="Scale" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_Scale" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Select">
      <topicdata name="Select" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="Select" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Select" />
        <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_Select" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.SetBounds">
      <topicdata name="SetBounds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="SetBounds" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_SetBounds" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Show">
      <topicdata name="Show" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="Show" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.Show" />
        <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_Show" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.UpdateBounds">
      <topicdata name="UpdateBounds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="UpdateBounds" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Control.UpdateBounds" />
        <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_UpdateBounds" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ShowDialog">
      <topicdata name="ShowDialog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="ShowDialog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Form.ShowDialog" />
        <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_ShowDialog" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.ValidateChildren">
      <topicdata name="ValidateChildren" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" allInherited="true" />
      <apidata name="ValidateChildren" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.Form.ValidateChildren" />
        <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_ValidateChildren" />
    </api>
    <api id="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Workflow.Activities.Rules.Design.RuleSetDialog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.Rules.RuleSet)" />
        <element api="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.Activities.Rules.RuleSet)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities" />
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" ref="true" />
      </containers>
      <file name="O_T_System_Workflow_Activities_Rules_Design_RuleSetDialog_ctor" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.Activities.Rules.RuleSet)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor" />
      <parameters>
        <parameter name="activityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="typeProvider">
          <type api="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" ref="true" />
        </parameter>
        <parameter name="ruleSet">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Design_RuleSetDialog_ctor_3_5e3ccf38" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.Rules.RuleSet)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="ruleSet">
          <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" ref="true" />
      </containers>
      <file name="C_System_Workflow_Activities_Rules_Design_RuleSetDialog_ctor_2_ec0690b4" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <type api="T:System.Windows.Forms.Form" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" ref="true" />
      </containers>
      <file name="M_System_Workflow_Activities_Rules_Design_RuleSetDialog_Dispose_1_36d384f7" />
    </api>
    <api id="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <topicdata group="api" />
      <apidata name="ProcessCmdKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <type api="T:System.Windows.Forms.Form" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="msg">
          <referenceTo>
            <type api="T:System.Windows.Forms.Message" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="keyData">
          <type api="T:System.Windows.Forms.Keys" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Flags">
            <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
            <enumValue>
              <field name="UnmanagedCode" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="M_System_Workflow_Activities_Rules_Design_RuleSetDialog_ProcessCmdKey_2_41d456ed" />
    </api>
    <api id="P:System.Workflow.Activities.Rules.Design.RuleSetDialog.RuleSet">
      <topicdata group="api" />
      <apidata name="RuleSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <returns>
        <type api="T:System.Workflow.Activities.Rules.RuleSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.Activities" module="System.Workflow.Activities">
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.Activities.Rules.Design" />
        <type api="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" ref="true" />
      </containers>
      <file name="P_System_Workflow_Activities_Rules_Design_RuleSetDialog_RuleSet" />
    </api>
  </apis>
</reflection>