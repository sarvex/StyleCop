<?xml version="1.0" encoding="utf-8" ?>
<StyleCopTestDescription TestName="Parenthesis">
  <!-- Tests valid and invalid use of parenthesis. -->
  <Test Name="Parenthesis">
    <TestCodeFile>Parenthesis.cs</TestCodeFile>
    <Settings>
      <GlobalSettings>
        <StringProperty Name="MergeSettingsFiles">NoMerge</StringProperty>
        <BooleanProperty Name="RulesEnabledByDefault">False</BooleanProperty>
      </GlobalSettings>
      <Analyzers>
        <Analyzer AnalyzerId="Microsoft.StyleCop.CSharp_old.MaintainabilityRules">
          <Rules>
            <Rule Name="StatementMustNotUseUnnecessaryParenthesis">
              <RuleSettings>
                <BooleanProperty Name="Enabled">True</BooleanProperty>
              </RuleSettings>
            </Rule>
          </Rules>
        </Analyzer>
      </Analyzers>
    </Settings>
    <ExpectedViolations>
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="110" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="114" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="118" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="121" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="124" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="127" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="130" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="133" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="136" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="137" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="138" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="141" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="144" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="147" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="152" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="156" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="161" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.InvalidAsChild" LineNumber="174" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Lambdas" LineNumber="180" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Lambdas" LineNumber="181" Rule="StatementMustNotUseUnnecessaryParenthesis" />
      <Violation Section="Root.Parenthesis1.Class1.Lambdas" LineNumber="189" Rule="StatementMustNotUseUnnecessaryParenthesis" />
    </ExpectedViolations>
  </Test>

  <!-- Tests parenthesis within arithmetic expressions. -->
  <Test Name="ArithmeticParenthesis">
    <TestCodeFile>ArithmeticParenthesis.cs</TestCodeFile>
    <Settings>
      <GlobalSettings>
        <StringProperty Name="MergeSettingsFiles">NoMerge</StringProperty>
        <BooleanProperty Name="RulesEnabledByDefault">False</BooleanProperty>
      </GlobalSettings>
      <Analyzers>
        <Analyzer AnalyzerId="Microsoft.StyleCop.CSharp_old.MaintainabilityRules">
          <Rules>
            <Rule Name="ArithmeticExpressionsMustDeclarePrecedence">
              <RuleSettings>
                <BooleanProperty Name="Enabled">True</BooleanProperty>
              </RuleSettings>
            </Rule>
          </Rules>
        </Analyzer>
      </Analyzers>
    </Settings>
    <ExpectedViolations>
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="9" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="10" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="11" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="12" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="13" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="14" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="15" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
      <Violation Section="Root.Parenthesis1.Class1.Invalid" LineNumber="16" Rule="ArithmeticExpressionsMustDeclarePrecedence" />
    </ExpectedViolations>
  </Test>

  <!-- Tests parenthesis within conditional logical expressions. -->
  <Test Name="ConditionalLogicalParenthesis">
    <TestCodeFile>ConditionalLogicalParenthesis.cs</TestCodeFile>
    <Settings>
      <GlobalSettings>
        <StringProperty Name="MergeSettingsFiles">NoMerge</StringProperty>
        <BooleanProperty Name="RulesEnabledByDefault">False</BooleanProperty>
      </GlobalSettings>
      <Analyzers>
        <Analyzer AnalyzerId="Microsoft.StyleCop.CSharp_old.MaintainabilityRules">
          <Rules>
            <Rule Name="ConditionalExpressionsMustDeclarePrecedence">
              <RuleSettings>
                <BooleanProperty Name="Enabled">True</BooleanProperty>
              </RuleSettings>
            </Rule>
          </Rules>
        </Analyzer>
      </Analyzers>
    </Settings>
    <ExpectedViolations>
      <Violation Section="Root.Parenthesis1.Class1.Method" LineNumber="10" Rule="ConditionalExpressionsMustDeclarePrecedence" />
    </ExpectedViolations>
  </Test>
</StyleCopTestDescription>
