<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlertDialogWithOptionsInNonUIState" xml:space="preserve">
    <value>An AlertDialog which provides the user an option has been fired while the program is running in a non-UI state. In this state, the only valid option for AlertDialog is MessageBoxButtons.OK. Check the DisplayUI property on the StyleCopCore object before calling an AlertDialog which provides other options.</value>
  </data>
  <data name="AllFiles" xml:space="preserve">
    <value>All files</value>
  </data>
  <data name="AnalysisErrorOccurred" xml:space="preserve">
    <value>An error occurred during the analysis: {0}</value>
  </data>
  <data name="AnalyzersTab" xml:space="preserve">
    <value>Rules</value>
  </data>
  <data name="BothItemsMustBeNullOrNonNull" xml:space="preserve">
    <value>Both nodes must be null, or both nodes must be non-null.</value>
  </data>
  <data name="CacheTab" xml:space="preserve">
    <value>Results Caching</value>
  </data>
  <data name="CannotBeNull" xml:space="preserve">
    <value>Must not be null</value>
  </data>
  <data name="CannotDisplaySettingsInNonUIMode" xml:space="preserve">
    <value>StyleCop is running in non-UI mode. The settings dialog cannot be displayed in this mode. Check the status of the DisplayUI property on the StyleCopCore object before attempting to display settings.</value>
  </data>
  <data name="CannotLoadSettingsFilePath" xml:space="preserve">
    <value>The settings file at this path cannot be loaded: {0}</value>
  </data>
  <data name="CollectionCannotBeEmptyOrNull" xml:space="preserve">
    <value>The collection must not be empty or null</value>
  </data>
  <data name="ComparingDifferentPropertyTypes" xml:space="preserve">
    <value>It is not possible to compare properties of different types.</value>
  </data>
  <data name="CouldNotSaveSettingsFile" xml:space="preserve">
    <value>The settings file could not be saved: {0}</value>
  </data>
  <data name="CouldNotSaveViolationsFile" xml:space="preserve">
    <value>Could not save the violations file.</value>
  </data>
  <data name="CouldNotSaveViolationsFileWithException" xml:space="preserve">
    <value>Could not save the violations file. An exception occurred: {0}</value>
  </data>
  <data name="SettingsDialogTitleDefault" xml:space="preserve">
    <value>StyleCop Default Settings</value>
  </data>
  <data name="DisabledByDefaultAttributeDeprecatedForAddIns" xml:space="preserve">
    <value>Analyzers are no longer allowed by be disabled by default. The DisableByDefault attribute has been deprecated and is not allowed to appear on a SourceAnalyzer node. Instead, place a DisabledByDefault attribute on Rule nodes to indicate individual rules which are disabled by default.</value>
  </data>
  <data name="EditDefaultSettingsWarning" xml:space="preserve">
    <value>You are about to edit the default settings which are applied to all code on which this installation of StyleCop is run. You may need special permissions to write to the file. Are you sure you want to do this?</value>
  </data>
  <data name="EmptySettingsFilePath" xml:space="preserve">
    <value>The settings file path must not be empty.</value>
  </data>
  <data name="ErrorTag" xml:space="preserve">
    <value>Error: {0}</value>
  </data>
  <data name="ExceptionWhileLoadingAddins" xml:space="preserve">
    <value>An exception occurred while loading one of the StyleCop add-ins: {0}, {1}</value>
  </data>
  <data name="GlobalSettingsFile" xml:space="preserve">
    <value>Global Settings File</value>
  </data>
  <data name="InvalidAddInXmlDocument" xml:space="preserve">
    <value>The analyzer or parser add-in returned a null or empty Xml initialization document.</value>
  </data>
  <data name="InvalidWindowLocationInputString" xml:space="preserve">
    <value>The window location input string is invalid: {0}</value>
  </data>
  <data name="SettingsDialogTitleLocal" xml:space="preserve">
    <value>StyleCop Project Settings</value>
  </data>
  <data name="LocalSettingsNotOpenedOrCreated" xml:space="preserve">
    <value>The local settings file could not be opened or created: {0}</value>
  </data>
  <data name="MissingAddInDescription" xml:space="preserve">
    <value>There is no description for the add-in.</value>
  </data>
  <data name="MissingNameAttributeOnRootNode" xml:space="preserve">
    <value>The root node does not have a valid name attribute.</value>
  </data>
  <data name="MustBeBetween" xml:space="preserve">
    <value>The value must be between {0} and {1}</value>
  </data>
  <data name="MustBeGreaterThan" xml:space="preserve">
    <value>The value must be greater than {0}</value>
  </data>
  <data name="MustBeGreaterThanOrEqualTo" xml:space="preserve">
    <value>The value must be greater than or equal to {0}</value>
  </data>
  <data name="MustBeGreaterThanOrEqualToZero" xml:space="preserve">
    <value>The value must be greater than or equal to zero</value>
  </data>
  <data name="MustBeGreaterThanZero" xml:space="preserve">
    <value>The value must be greater than zero</value>
  </data>
  <data name="MustBeLessThan" xml:space="preserve">
    <value>The value must be less than {0}</value>
  </data>
  <data name="MustBeLessThanOrEqualTo" xml:space="preserve">
    <value>The value must be less than or equal to {0}</value>
  </data>
  <data name="NoLinkedSettingsFile" xml:space="preserve">
    <value>The linked settings file does not exist or cannot be loaded.</value>
  </data>
  <data name="NoParentSettingsFile" xml:space="preserve">
    <value>There is no settings file located in a parent folder above the location of this settings file.</value>
  </data>
  <data name="NoViolationsEncountered" xml:space="preserve">
    <value>No violations encountered</value>
  </data>
  <data name="ProjectSettingsFileNotLoadedOrCreated" xml:space="preserve">
    <value>The settings file for the project could not be loaded or created: {0}</value>
  </data>
  <data name="PropertyControlAlreadyInitialized" xml:space="preserve">
    <value>The PropertyControl object has already been initialized</value>
  </data>
  <data name="PropertyDescriptionNotSet" xml:space="preserve">
    <value>The property description has not been set.</value>
  </data>
  <data name="PropertyDescriptorDoesNotExist" xml:space="preserve">
    <value>The property container does not contain a property descriptor for the {0} property.</value>
  </data>
  <data name="PropertyDescriptorHasNoDefaultValue" xml:space="preserve">
    <value>The property descriptor does not have a default value defined.</value>
  </data>
  <data name="PropertyFriendlyNameNotSet" xml:space="preserve">
    <value>The friendly name of the property has not been set.</value>
  </data>
  <data name="PropertyHasNoDescription" xml:space="preserve">
    <value>The property has no description.</value>
  </data>
  <data name="PropertyHasNoFriendlyName" xml:space="preserve">
    <value>The property has no friendly name.</value>
  </data>
  <data name="PropertyHasNoName" xml:space="preserve">
    <value>The property has no name.</value>
  </data>
  <data name="ReadOnlyCollection" xml:space="preserve">
    <value>The collection is read-only.</value>
  </data>
  <data name="ReadOnlyProperty" xml:space="preserve">
    <value>The property is read-only.</value>
  </data>
  <data name="RootNodeMustBeSourceParser" xml:space="preserve">
    <value>The name of the root node must be 'SourceParser'</value>
  </data>
  <data name="RuleDisabledByDefaultAndNotCanDisable" xml:space="preserve">
    <value>A rule cannot be marked with DisableByDefault=true if it is also marked with CanDisable=false.</value>
  </data>
  <data name="RuleDoesNotExist" xml:space="preserve">
    <value>The rule {0} does not exist</value>
  </data>
  <data name="RuleGroupHasNoNameAttribute" xml:space="preserve">
    <value>The rule group has no Name attribute.</value>
  </data>
  <data name="RuleHasNoNameAttribute" xml:space="preserve">
    <value>The rule has no Name attribute.</value>
  </data>
  <data name="RuleNameInvalid" xml:space="preserve">
    <value>A rule name must start with an upper-case letter, and can only contain letters and numbers.</value>
  </data>
  <data name="RuleHasNoContextElement" xml:space="preserve">
    <value>The rule {0} has no Context element or the Context is empty.</value>
  </data>
  <data name="RuleWithSameNameExists" xml:space="preserve">
    <value>A rule with the same name has already been added.</value>
  </data>
  <data name="SettingsFileHasNotBeenLoaded" xml:space="preserve">
    <value>A settings file has not been loaded.</value>
  </data>
  <data name="SettingsFiles" xml:space="preserve">
    <value>Settings files</value>
  </data>
  <data name="SettingsFilesTab" xml:space="preserve">
    <value>Settings Files</value>
  </data>
  <data name="StyleCopUnableToLoad" xml:space="preserve">
    <value>StyleCop is unable to load. An unexpected error occurred. {0}</value>
  </data>
  <data name="SourceAnalyzerAttributeMissing" xml:space="preserve">
    <value>The analyzer type does not have a properly formatted SourceAnalyzer attribute.</value>
  </data>
  <data name="SourceAnalyzerRootNodeIsIncorrect" xml:space="preserve">
    <value>The name of the root node must be 'SourceAnalyzer'</value>
  </data>
  <data name="SourceCodeTypePropertyNotSet" xml:space="preserve">
    <value>The SourceCode's Type property is not set.</value>
  </data>
  <data name="StringCannotBeEmptyOrNull" xml:space="preserve">
    <value>The string must not be empty or null</value>
  </data>
  <data name="SyntaxErrorInFile" xml:space="preserve">
    <value>A syntax error has been discovered in file {0} on line {1}.</value>
  </data>
  <data name="SyntaxErrorInFileWithMessage" xml:space="preserve">
    <value>A syntax error has been discovered in file {0} on line {1}: {2}</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>StyleCop</value>
  </data>
  <data name="ViolationsEncountered" xml:space="preserve">
    <value>{0} violations encountered.</value>
  </data>
  <data name="WarningTag" xml:space="preserve">
    <value>Warning: {0}</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>Internal Error</value>
  </data>
  <data name="RuleCheckIdInvalid" xml:space="preserve">
    <value>A rule's CheckId must be six characters long, composed of two upper-case letters followed by four digits.</value>
  </data>
  <data name="RuleHasNoCheckIdAttribute" xml:space="preserve">
    <value>The rule {0} has no CheckId attribute.</value>
  </data>
  <data name="NodeAlreadyInCollection" xml:space="preserve">
    <value>The node has already been inserted into a different collection.</value>
  </data>
  <data name="UnknownAssemblyUsingDefaultCheckIdPrefix" xml:space="preserve">
    <value>A rule defined within a third-party rules add-in uses the CheckId {0}. CheckIds for third-party rules may not use the SA prefix, but instead must define their own two-letter prefix.</value>
  </data>
  <data name="SettingsFileMatchPaths" xml:space="preserve">
    <value>{0} (*.StyleCop)|*.StyleCop|{1} (*.*)|*.*"</value>
  </data>
  <data name="ViolationFormatter" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="SourceCodeFactoryReturnsNull" xml:space="preserve">
    <value>A SourceCodeFactory may not return null.</value>
  </data>
  <data name="SettingsDialogTitleFormat" xml:space="preserve">
    <value>{0} - {1}</value>
  </data>
  <data name="AutoUpdateInformation" xml:space="preserve">
    <value>StyleCop {0} is now available.
StyleCop {1} is currently installed.

Please consider downloading the latest version.</value>
  </data>
  <data name="AutoUpdateQuestion" xml:space="preserve">
    <value>StyleCop {0} is now available.
StyleCop {1} is currently installed.

Once downloaded and installed you'll need to restart Visual Studio.

Do you wish to download the latest version?</value>
  </data>
</root>